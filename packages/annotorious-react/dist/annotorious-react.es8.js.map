{"version":3,"file":"annotorious-react.es8.js","sources":["../src/openseadragon/OpenSeadragonAnnotator.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from 'react';\nimport OpenSeadragon from 'openseadragon';\nimport { createOSDAnnotator } from '@annotorious/openseadragon';\nimport { AnnotoriousOpts, DrawingStyle, Filter, ImageAnnotation } from '@annotorious/annotorious';\nimport { AnnotoriousContext } from '../Annotorious';\n\nexport const OpenSeadragonAnnotatorContext = createContext<{ \n  viewer: OpenSeadragon.Viewer,\n  setViewer(viewer: OpenSeadragon.Viewer): void\n}>({ viewer: null, setViewer: null });\n\nexport type OpenSeadragonAnnotatorProps<E extends unknown> = AnnotoriousOpts<ImageAnnotation, E> & {\n\n  children?: ReactNode;\n\n  drawingEnabled?: boolean;\n\n  filter?: Filter<ImageAnnotation>;\n\n  style?: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle);\n\n  tool?: string | null;\n\n}\n\nexport const OpenSeadragonAnnotator = <E extends unknown>(props: OpenSeadragonAnnotatorProps<E>) => {\n\n  const { children, tool, ...opts } = props;\n\n  const [viewer, setViewer] = useState<OpenSeadragon.Viewer>();\n\n  const { anno, setAnno } = useContext(AnnotoriousContext);\n\n  useEffect(() => {\n    if (viewer) {\n      const anno = createOSDAnnotator<E>(viewer, opts);\n\n      if (props.drawingEnabled !== undefined) anno.setDrawingEnabled(props.drawingEnabled);\n      if (props.filter) anno.setFilter(props.filter);\n      if (props.style) anno.setStyle(props.style);\n      if (props.tool) anno.setDrawingTool(props.tool);\n\n      setAnno(anno);\n\n      return () => {\n        anno.destroy();\n        setAnno(undefined);\n      }\n    }\n  }, [viewer]);\n\n  useEffect(() => {\n    if (anno) anno.setDrawingEnabled(props.drawingEnabled);\n  }, [props.drawingEnabled]);\n\n  useEffect(() => {\n    if (anno) anno.setFilter(props.filter);\n  }, [props.filter]);\n\n  useEffect(() => {\n    if (anno) anno.setStyle(props.style);\n  }, [props.style]);\n\n  useEffect(() => {\n    if (anno) anno.setDrawingTool(tool);\n  }, [tool]);\n\n  return (\n    <OpenSeadragonAnnotatorContext.Provider value={{ viewer, setViewer }}>\n      {props.children}\n    </OpenSeadragonAnnotatorContext.Provider>\n  )\n\n}\n\nexport const useViewer = () => {\n  const { viewer } = useContext(OpenSeadragonAnnotatorContext);\n  return viewer;\n}"],"names":["OpenSeadragonAnnotatorContext","createContext","OpenSeadragonAnnotator","props","children","tool","opts","viewer","setViewer","useState","anno","setAnno","useContext","AnnotoriousContext","useEffect","createOSDAnnotator","jsx","useViewer"],"mappings":";;;;AAMO,MAAMA,IAAgCC,EAG1C,EAAE,QAAQ,MAAM,WAAW,MAAM,GAgBvBC,IAAyB,CAAoBC,MAA0C;AAElG,QAAM,EAAE,UAAAC,GAAU,MAAAC,GAAM,GAAGC,MAASH,GAE9B,CAACI,GAAQC,CAAS,IAAIC,EAA+B,GAErD,EAAE,MAAAC,GAAM,SAAAC,EAAQ,IAAIC,EAAWC,CAAkB;AAEvD,SAAAC,EAAU,MAAM;AACd,QAAIP,GAAQ;AACJG,YAAAA,IAAOK,EAAsBR,GAAQD,CAAI;AAE/C,aAAIH,EAAM,mBAAmB,UAAWO,EAAK,kBAAkBP,EAAM,cAAc,GAC/EA,EAAM,UAAQO,EAAK,UAAUP,EAAM,MAAM,GACzCA,EAAM,SAAOO,EAAK,SAASP,EAAM,KAAK,GACtCA,EAAM,QAAMO,EAAK,eAAeP,EAAM,IAAI,GAE9CQ,EAAQD,CAAI,GAEL,MAAM;AACXA,QAAAA,EAAK,QAAQ,GACbC,EAAQ,MAAS;AAAA,MAAA;AAAA,IAErB;AAAA,EAAA,GACC,CAACJ,CAAM,CAAC,GAEXO,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,kBAAkBP,EAAM,cAAc;AAAA,EAAA,GACpD,CAACA,EAAM,cAAc,CAAC,GAEzBW,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,UAAUP,EAAM,MAAM;AAAA,EAAA,GACpC,CAACA,EAAM,MAAM,CAAC,GAEjBW,EAAU,MAAM;AACV,IAAAJ,KAAWA,EAAA,SAASP,EAAM,KAAK;AAAA,EAAA,GAClC,CAACA,EAAM,KAAK,CAAC,GAEhBW,EAAU,MAAM;AACV,IAAAJ,KAAMA,EAAK,eAAeL,CAAI;AAAA,EAAA,GACjC,CAACA,CAAI,CAAC,GAGPW,gBAAAA,MAAChB,EAA8B,UAA9B,EAAuC,OAAO,EAAE,QAAAO,GAAQ,WAAAC,EACtD,GAAA,UAAAL,EAAM,SACT,CAAA;AAGJ,GAEac,IAAY,MAAM;AAC7B,QAAM,EAAE,QAAAV,EAAA,IAAWK,EAAWZ,CAA6B;AACpD,SAAAO;AACT;"}