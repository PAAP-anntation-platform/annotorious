{"version":3,"file":"annotorious.es.js","sources":["../../../node_modules/svelte/src/runtime/internal/utils.js","../../../node_modules/svelte/src/runtime/internal/globals.js","../../../node_modules/svelte/src/runtime/internal/dom.js","../../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../../node_modules/svelte/src/runtime/internal/scheduler.js","../../../node_modules/svelte/src/runtime/internal/transitions.js","../../../node_modules/svelte/src/runtime/internal/each.js","../../../node_modules/svelte/src/runtime/internal/Component.js","../../../node_modules/svelte/src/shared/version.js","../../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../src/model/core/Shape.ts","../src/model/core/shapeUtils.ts","../src/model/core/ellipse/ellipseUtils.ts","../src/model/core/polygon/polygonUtils.ts","../src/model/core/rectangle/rectangleUtils.ts","../src/model/w3c/fragment/FragmentSelector.ts","../src/model/w3c/svg/SVG.ts","../src/model/w3c/svg/SVGSelector.ts","../../../node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/uuid/dist/esm-browser/native.js","../../../node_modules/uuid/dist/esm-browser/v4.js","../../annotorious-core/dist/annotorious-core.es.js","../src/model/w3c/W3CImageFormatAdapter.ts","../src/annotation/editors/polygon/PolygonEditor.svelte","../src/annotation/utils/math.ts","../../../node_modules/svelte/src/runtime/store/index.js","../src/annotation/utils/responsive.ts","../src/annotation/utils/touch.ts","../src/annotation/editors/Handle.svelte","../src/annotation/editors/rectangle/RectangleEditor.svelte","../src/annotation/editors/editorsRegistry.ts","../src/annotation/editors/Editor.svelte","../src/annotation/utils/styling.ts","../src/annotation/editors/EditorMount.svelte","../src/annotation/tools/ToolMount.svelte","../src/annotation/tools/rectangle/RubberbandRectangle.svelte","../src/annotation/tools/polygon/RubberbandPolygon.svelte","../src/annotation/tools/drawingToolsRegistry.ts","../src/annotation/shapes/Ellipse.svelte","../src/annotation/shapes/Polygon.svelte","../src/annotation/shapes/Rectangle.svelte","../src/annotation/Transform.ts","../src/annotation/SVGAnnotationLayerPointerEvent.ts","../src/annotation/SVGAnnotationLayer.svelte","../../../node_modules/quickselect/index.js","../../../node_modules/rbush/index.js","../src/state/spatialTree.ts","../src/state/ImageAnnotatorState.ts","../src/themes/smart/setTheme.ts","../src/AnnotoriousOpts.ts","../src/keyboardCommands.ts","../src/Annotorious.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.15';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import type { AbstractSelector } from '@annotorious/core';\n\nexport interface Shape extends AbstractSelector {\n\n  type: ShapeType;\n\n  geometry: Geometry;\n\n}\n\nexport enum ShapeType {\n\n  ELLIPSE = 'ELLIPSE',\n\n  POLYGON = 'POLYGON',\n\n  RECTANGLE = 'RECTANGLE'\n\n}\n\nexport interface Geometry {\n\n  bounds: Bounds;\n\n}\n\nexport interface Bounds {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n}","import type { Bounds, Shape, ShapeType } from './Shape';\n\nexport interface ShapeUtil<T extends Shape> {\n\n  area: (shape: T) => number;\n\n  intersects: (shape: T, x: number, y: number) => boolean;\n\n}\n\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\n\n/**\n * Registers a new ShapeUtil for a given shape type.\n * @param type the shape type\n * @param util the ShapeUtil implementation for this shape type\n */\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\n  (Utils[type] = util);\n\n/**\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\n * @param shape the shape\n */\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\n\n/**\n * Tests if the given shape intersects the given point. Delegates to\n * the corresponding ShapeUtil.\n * @param shape the shape\n * @param x point x coord\n * @param y point y coord\n * @returns true if shape and point intersect\n */\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\n  Utils[shape.type].intersects(shape, x, y);\n\n/**\n * Computes Bounds from a given list of points.\n * @param points the points\n * @returns the Bounds\n */\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  points.forEach(([x, y]) => {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  });\n\n  return { minX, minY, maxX, maxY };\n};","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Ellipse } from './Ellipse';\n\nconst EllipseUtil: ShapeUtil<Ellipse> = {\n\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\n\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\n    const { cx, cy, rx, ry } = e.geometry;\n\n    // For future use\n    const rot = 0;\n\n    const cos = Math.cos(rot);\n    const sin = Math.sin(rot);\n  \n    const dx  = x - cx;\n    const dy  = y - cy;\n  \n    const tdx = cos * dx + sin * dy;\n    const tdy = sin * dx - cos * dy;\n  \n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\n  }\n};\n\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Polygon } from './Polygon';\n\nconst PolygonUtil: ShapeUtil<Polygon> = {\n\n  area: (polygon: Polygon): number => {\n    const { points } = polygon.geometry;\n\n    let area = 0;\n    let j = points.length - 1;\n\n    for (let i = 0; i < points.length; i++) {\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n      j = i;\n    }\n\n    return Math.abs(0.5 * area);\n  },\n\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n    const { points } = polygon.geometry;\n\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i][0],\n        yi = points[i][1];\n      const xj = points[j][0],\n        yj = points[j][1];\n\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n  \n};\n\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\nimport type { Rectangle } from './Rectangle';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\n\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\n\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\n\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\n    x >= rect.geometry.x &&\n    x <= rect.geometry.x + rect.geometry.w &&\n    y >= rect.geometry.y &&\n    y <= rect.geometry.y + rect.geometry.h\n    \n};\n\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","import type { Rectangle, RectangleGeometry } from '../../core';\nimport { ShapeType } from '../../core';\n\nexport interface FragmentSelector {\n\n  type: 'FragmentSelector';\n\n  conformsTo: 'http://www.w3.org/TR/media-frags/',\n\n  value: string;\n\n}\n\nexport const parseFragmentSelector = (\n  fragmentOrSelector: FragmentSelector | string,\n  invertY = false\n): Rectangle => {\n\n  const fragment =\n    typeof fragmentOrSelector === 'string' ? fragmentOrSelector : fragmentOrSelector.value;\n\n  const regex = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g;\n\n  const matches = [...fragment.matchAll(regex)][0];\n  const [_, prefix, unit, a, b, c, d] = matches;\n\n  if (prefix !== 'xywh') throw new Error('Unsupported MediaFragment: ' + fragment);\n\n  if (unit && unit !== 'pixel') throw new Error(`Unsupported MediaFragment unit: ${unit}`);\n\n  const [x, y, w, h] = [a, b, c, d].map(parseFloat);\n\n  return {\n    type: ShapeType.RECTANGLE,\n    geometry: {\n      x,\n      y,\n      w,\n      h,\n      bounds: {\n        minX: x,\n        minY: invertY ? y - h : y,\n        maxX: x + w,\n        maxY: invertY ? y : y + h\n      }\n    }\n  }\n}\n\nexport const serializeFragmentSelector = (geometry: RectangleGeometry): FragmentSelector => {\n  const { x, y, w, h } = geometry;\n  \n  return {\n    type: 'FragmentSelector',\n    conformsTo: 'http://www.w3.org/TR/media-frags/',\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  };\n}\n","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nexport const sanitize = (doc: Element | Document) => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = (el: Element) => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n\n  Array.from(scripts).reverse().forEach(el => el.parentNode!.removeChild(el));\n\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\n/** Helper that forces an un-namespaced node to SVG **/\nexport const insertSVGNamespace = (originalDoc: Document): Element => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n","import type { Ellipse, EllipseGeometry, Polygon, PolygonGeometry, Shape } from '../../core';\nimport { boundsFromPoints, ShapeType } from '../../core';\nimport { insertSVGNamespace, sanitize, SVG_NAMESPACE } from './SVG';\n\nexport interface SVGSelector {\n\n  type: 'SvgSelector';\n\n  value: string;\n\n}\n\nconst parseSVGXML = (value: string): Element => {\n  const parser = new DOMParser();\n\n  const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n  // SVG needs a namespace declaration - check if it's set or insert if not\n  const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n  const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n  if (isPrefixDeclared || isDefaultNamespaceSVG) {\n    return sanitize(doc).firstChild as Element;\n  } else {\n    return sanitize(insertSVGNamespace(doc)).firstChild as Element;\n  }\n}\n\nconst parseSVGPolygon = (value: string): Polygon => {\n  const [a, b, str] = value.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\n  const points = str.split(' ').map((p) => p.split(',').map(parseFloat));\n\n  return {\n    type: ShapeType.POLYGON,\n    geometry: {\n      points,\n      bounds: boundsFromPoints(points as [number, number][])\n    }\n  };\n}\n\nconst parseSVGEllipse = (value: string): Ellipse => {\n  const doc = parseSVGXML(value);\n\n  const cx = parseFloat(doc.getAttribute('cx')!);\n  const cy = parseFloat(doc.getAttribute('cy')!);\n  const rx = parseFloat(doc.getAttribute('rx')!);\n  const ry = parseFloat(doc.getAttribute('ry')!);\n\n  const bounds = {\n    minX: cx - rx,\n    minY: cy - ry,\n    maxX: cx + rx,\n    maxY: cy + ry\n  };\n\n  return {\n    type: ShapeType.ELLIPSE,\n    geometry: {\n      cx,\n      cy,\n      rx,\n      ry,\n      bounds\n    }\n  };\n}\n\nexport const parseSVGSelector = <T extends Shape>(valueOrSelector: SVGSelector | string): T => {\n  const value = typeof valueOrSelector === 'string' ? valueOrSelector : valueOrSelector.value;\n\n  if (value.includes('<polygon points='))\n    return parseSVGPolygon(value) as unknown as T;\n  else if (value.includes('<ellipse ')) \n    return parseSVGEllipse(value) as unknown as T;\n  else \n    throw 'Unsupported SVG shape: ' + value;\n}\n\nexport const serializeSVGSelector = (shape: Shape): SVGSelector => {\n  let value: string | undefined;\n\n  if (shape.type === ShapeType.POLYGON) {\n    const geom = shape.geometry as PolygonGeometry;\n    const { points } = geom;\n    value = `<svg><polygon points=\"${points.map((xy) => xy.join(',')).join(' ')}\" /></svg>`;\n  } else if (shape.type === ShapeType.ELLIPSE) {\n    const geom = shape.geometry as EllipseGeometry;\n    value = `<svg><ellipse cx=\"${geom.cx}\" cy=\"${geom.cy}\" rx=\"${geom.rx}\" ry=\"${geom.ry}\" /></svg>`\n  }\n\n  if (value) {\n    return { type: 'SvgSelector', value };\n  } else {\n    throw `Unsupported shape type: ${shape.type}`;\n  }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","var j = Object.prototype.hasOwnProperty;\nfunction B(e, n) {\n  var t, o;\n  if (e === n)\n    return !0;\n  if (e && n && (t = e.constructor) === n.constructor) {\n    if (t === Date)\n      return e.getTime() === n.getTime();\n    if (t === RegExp)\n      return e.toString() === n.toString();\n    if (t === Array) {\n      if ((o = e.length) === n.length)\n        for (; o-- && B(e[o], n[o]); )\n          ;\n      return o === -1;\n    }\n    if (!t || typeof e == \"object\") {\n      o = 0;\n      for (t in e)\n        if (j.call(e, t) && ++o && !j.call(n, t) || !(t in n) || !B(e[t], n[t]))\n          return !1;\n      return Object.keys(n).length === o;\n    }\n  }\n  return e !== e && n !== n;\n}\nfunction z() {\n}\nfunction q(e, n) {\n  return e != e ? n == n : e !== n || e && typeof e == \"object\" || typeof e == \"function\";\n}\nconst k = [];\nfunction Y(e, n = z) {\n  let t;\n  const o = /* @__PURE__ */ new Set();\n  function i(E) {\n    if (q(e, E) && (e = E, t)) {\n      const y = !k.length;\n      for (const u of o)\n        u[1](), k.push(u, e);\n      if (y) {\n        for (let u = 0; u < k.length; u += 2)\n          k[u][0](k[u + 1]);\n        k.length = 0;\n      }\n    }\n  }\n  function p(E) {\n    i(E(e));\n  }\n  function L(E, y = z) {\n    const u = [E, y];\n    return o.add(u), o.size === 1 && (t = n(i, p) || z), E(e), () => {\n      o.delete(u), o.size === 0 && t && (t(), t = null);\n    };\n  }\n  return { set: i, update: p, subscribe: L };\n}\nconst Ce = (e) => {\n  const { subscribe: n, set: t } = Y();\n  let o;\n  return n((i) => o = i), e.observe(({ changes: i }) => {\n    if (o) {\n      (i.deleted || []).some((E) => E.id === o) && t(void 0);\n      const L = (i.updated || []).find(({ oldValue: E }) => E.id === o);\n      L && t(L.newValue.id);\n    }\n  }), {\n    get current() {\n      return o;\n    },\n    subscribe: n,\n    set: t\n  };\n};\nvar G = /* @__PURE__ */ ((e) => (e.EDIT = \"EDIT\", e.SELECT = \"SELECT\", e.NONE = \"NONE\", e))(G || {});\nconst V = { selected: [] }, we = (e, n = \"EDIT\") => {\n  const { subscribe: t, set: o } = Y(V);\n  let i = V;\n  t((s) => i = s);\n  const p = () => o(V), L = () => {\n    var s;\n    return ((s = i.selected) == null ? void 0 : s.length) === 0;\n  }, E = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const h = typeof s == \"string\" ? s : s.id;\n    return i.selected.some((w) => w.id === h);\n  }, y = (s, h) => {\n    const w = e.getAnnotation(s);\n    if (w) {\n      const b = H(w, n);\n      o(b === \"EDIT\" ? { selected: [{ id: s, editable: !0 }], pointerEvent: h } : b === \"SELECT\" ? { selected: [{ id: s }], pointerEvent: h } : { selected: [], pointerEvent: h });\n    } else\n      console.warn(\"Invalid selection: \" + s);\n  }, u = (s, h = !0) => {\n    const w = Array.isArray(s) ? s : [s], b = w.map((S) => e.getAnnotation(S)).filter(Boolean);\n    o({ selected: b.map(({ id: S }) => ({ id: S, editable: h })) }), b.length !== w.length && console.warn(\"Invalid selection\", s);\n  }, U = (s) => {\n    if (i.selected.length === 0)\n      return !1;\n    const { selected: h } = i;\n    h.filter(({ id: b }) => s.includes(b)).length > 0 && o({ selected: h.filter(({ id: b }) => !s.includes(b)) });\n  };\n  return e.observe(({ changes: s }) => U((s.deleted || []).map((h) => h.id))), {\n    clear: p,\n    clickSelect: y,\n    get selected() {\n      return i ? [...i.selected] : null;\n    },\n    get pointerEvent() {\n      return i ? i.pointerEvent : null;\n    },\n    isEmpty: L,\n    isSelected: E,\n    setSelected: u,\n    subscribe: t\n  };\n}, H = (e, n) => typeof n == \"function\" ? n(e) || \"EDIT\" : n || \"EDIT\";\nlet $;\nconst F = new Uint8Array(16);\nfunction J() {\n  if (!$ && ($ = typeof crypto < \"u\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !$))\n    throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n  return $(F);\n}\nconst D = [];\nfor (let e = 0; e < 256; ++e)\n  D.push((e + 256).toString(16).slice(1));\nfunction Q(e, n = 0) {\n  return D[e[n + 0]] + D[e[n + 1]] + D[e[n + 2]] + D[e[n + 3]] + \"-\" + D[e[n + 4]] + D[e[n + 5]] + \"-\" + D[e[n + 6]] + D[e[n + 7]] + \"-\" + D[e[n + 8]] + D[e[n + 9]] + \"-\" + D[e[n + 10]] + D[e[n + 11]] + D[e[n + 12]] + D[e[n + 13]] + D[e[n + 14]] + D[e[n + 15]];\n}\nconst X = typeof crypto < \"u\" && crypto.randomUUID && crypto.randomUUID.bind(crypto), M = {\n  randomUUID: X\n};\nfunction Z(e, n, t) {\n  if (M.randomUUID && !n && !e)\n    return M.randomUUID();\n  e = e || {};\n  const o = e.random || (e.rng || J)();\n  return o[6] = o[6] & 15 | 64, o[8] = o[8] & 63 | 128, Q(o);\n}\nconst Le = (e) => {\n  const { creator: n, updatedBy: t } = e.target, o = e.bodies.reduce((i, p) => [...i, p.creator, p.updatedBy].filter(Boolean), []);\n  return [\n    n,\n    t,\n    ...o\n  ].filter((i) => i);\n}, Ue = (e, n, t, o) => ({\n  id: Z(),\n  annotation: e.id,\n  created: t || /* @__PURE__ */ new Date(),\n  creator: o,\n  ...n\n}), K = (e, n) => {\n  const t = new Set(e.bodies.map((o) => o.id));\n  return n.bodies.filter((o) => !t.has(o.id));\n}, ee = (e, n) => {\n  const t = new Set(n.bodies.map((o) => o.id));\n  return e.bodies.filter((o) => !t.has(o.id));\n}, te = (e, n) => n.bodies.map((t) => {\n  const o = e.bodies.find((i) => i.id === t.id);\n  return { newBody: t, oldBody: o && !B(o, t) ? o : void 0 };\n}).filter(({ oldBody: t }) => t).map(({ oldBody: t, newBody: o }) => ({ oldBody: t, newBody: o })), ne = (e, n) => !B(e.target, n.target), P = (e, n) => {\n  const t = K(e, n), o = ee(e, n), i = te(e, n);\n  return {\n    oldValue: e,\n    newValue: n,\n    bodiesCreated: t.length > 0 ? t : void 0,\n    bodiesDeleted: o.length > 0 ? o : void 0,\n    bodiesUpdated: i.length > 0 ? i : void 0,\n    targetUpdated: ne(e, n) ? { oldTarget: e.target, newTarget: n.target } : void 0\n  };\n};\nvar oe = /* @__PURE__ */ ((e) => (e.BODY_ONLY = \"BODY_ONLY\", e.TARGET_ONLY = \"TARGET_ONLY\", e))(oe || {}), O = /* @__PURE__ */ ((e) => (e.LOCAL = \"LOCAL\", e.REMOTE = \"REMOTE\", e))(O || {});\nconst se = (e, n) => {\n  var p, L;\n  const { changes: t, origin: o } = n;\n  if (!(!e.options.origin || e.options.origin === o))\n    return !1;\n  if (e.options.ignore) {\n    const { ignore: E } = e.options, y = (U) => U && U.length > 0;\n    if (!(y(t.created) || y(t.deleted))) {\n      const U = (p = t.updated) == null ? void 0 : p.some((h) => y(h.bodiesCreated) || y(h.bodiesDeleted) || y(h.bodiesUpdated)), s = (L = t.updated) == null ? void 0 : L.some((h) => h.targetUpdated);\n      if (E === \"BODY_ONLY\" && U && !s || E === \"TARGET_ONLY\" && s && !U)\n        return !1;\n    }\n  }\n  if (e.options.annotations) {\n    const E = /* @__PURE__ */ new Set([\n      ...(t.created || []).map((u) => u.id),\n      ...(t.deleted || []).map((u) => u.id),\n      ...(t.updated || []).map(({ oldValue: u }) => u.id)\n    ]);\n    return !!(Array.isArray(e.options.annotations) ? e.options.annotations : [e.options.annotations]).find((u) => E.has(u));\n  } else\n    return !0;\n}, ie = (e, n) => {\n  const t = new Set((e.created || []).map((s) => s.id)), o = new Set((e.updated || []).map(({ newValue: s }) => s.id)), i = new Set((n.created || []).map((s) => s.id)), p = new Set((n.deleted || []).map((s) => s.id)), L = new Set((n.updated || []).map(({ oldValue: s }) => s.id)), E = new Set((n.updated || []).filter(({ oldValue: s }) => t.has(s.id) || o.has(s.id)).map(({ oldValue: s }) => s.id)), y = [\n    ...(e.created || []).filter((s) => !p.has(s.id)).map((s) => L.has(s.id) ? n.updated.find(({ oldValue: h }) => h.id === s.id).newValue : s),\n    ...n.created || []\n  ], u = [\n    ...(e.deleted || []).filter((s) => !i.has(s.id)),\n    ...(n.deleted || []).filter((s) => !t.has(s.id))\n  ], U = [\n    ...(e.updated || []).filter(({ newValue: s }) => !p.has(s.id)).map((s) => {\n      const { oldValue: h, newValue: w } = s;\n      if (L.has(w.id)) {\n        const b = n.updated.find((S) => S.oldValue.id === w.id).newValue;\n        return P(h, b);\n      } else\n        return s;\n    }),\n    ...(n.updated || []).filter(({ oldValue: s }) => !E.has(s.id))\n  ];\n  return { created: y, deleted: u, updated: U };\n}, de = (e) => e.id !== void 0, Se = () => {\n  const e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map(), t = [], o = (d, r = {}) => t.push({ onChange: d, options: r }), i = (d) => {\n    const r = t.findIndex((c) => c.onChange == d);\n    r > -1 && t.splice(r, 1);\n  }, p = (d, r) => {\n    const c = {\n      origin: d,\n      changes: {\n        created: r.created || [],\n        updated: r.updated || [],\n        deleted: r.deleted || []\n      },\n      state: [...e.values()]\n    };\n    t.forEach((f) => {\n      se(f, c) && f.onChange(c);\n    });\n  }, L = (d, r = O.LOCAL) => {\n    if (e.get(d.id))\n      throw Error(`Cannot add annotation ${d.id} - exists already`);\n    e.set(d.id, d), d.bodies.forEach((f) => n.set(f.id, d.id)), p(r, { created: [d] });\n  }, E = (d, r) => {\n    const c = typeof d == \"string\" ? r : d, f = typeof d == \"string\" ? d : d.id, C = e.get(f);\n    if (C) {\n      const T = P(C, c);\n      return f === c.id ? e.set(f, c) : (e.delete(f), e.set(c.id, c)), C.bodies.forEach((I) => n.delete(I.id)), c.bodies.forEach((I) => n.set(I.id, c.id)), T;\n    } else\n      console.warn(`Cannot update annotation ${f} - does not exist`);\n  }, y = (d, r = O.LOCAL, c = O.LOCAL) => {\n    const f = de(r) ? c : r, C = E(d, r);\n    C && p(f, { updated: [C] });\n  }, u = (d, r = O.LOCAL) => {\n    const c = d.reduce((f, C) => {\n      const T = E(C);\n      return T ? [...f, T] : f;\n    }, []);\n    c.length > 0 && p(r, { updated: c });\n  }, U = (d, r = O.LOCAL) => {\n    const c = e.get(d.annotation);\n    if (c) {\n      const f = {\n        ...c,\n        bodies: [...c.bodies, d]\n      };\n      e.set(c.id, f), n.set(d.id, f.id), p(r, { updated: [{\n        oldValue: c,\n        newValue: f,\n        bodiesCreated: [d]\n      }] });\n    } else\n      console.warn(`Attempt to add body to missing annotation: ${d.annotation}`);\n  }, s = () => [...e.values()], h = (d = O.LOCAL) => {\n    const r = [...e.values()];\n    e.clear(), n.clear(), p(d, { deleted: r });\n  }, w = (d, r = !0, c = O.LOCAL) => {\n    if (r) {\n      const f = [...e.values()];\n      e.clear(), n.clear(), d.forEach((C) => {\n        e.set(C.id, C), C.bodies.forEach((T) => n.set(T.id, C.id));\n      }), p(c, { created: d, deleted: f });\n    } else {\n      const f = d.reduce((C, T) => {\n        const I = e.get(T.id);\n        return I ? [...C, I] : C;\n      }, []);\n      if (f.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${f.map((C) => C.id).join(\", \")}`);\n      d.forEach((C) => {\n        e.set(C.id, C), C.bodies.forEach((T) => n.set(T.id, C.id));\n      }), p(c, { created: d });\n    }\n  }, b = (d) => {\n    const r = typeof d == \"string\" ? d : d.id, c = e.get(r);\n    if (c)\n      return e.delete(r), c.bodies.forEach((f) => n.delete(f.id)), c;\n    console.warn(`Attempt to delete missing annotation: ${r}`);\n  }, S = (d, r = O.LOCAL) => {\n    const c = b(d);\n    c && p(r, { deleted: [c] });\n  }, v = (d, r = O.LOCAL) => {\n    const c = d.reduce((f, C) => {\n      const T = b(C);\n      return T ? [...f, T] : f;\n    }, []);\n    c.length > 0 && p(r, { deleted: c });\n  }, l = (d) => {\n    const r = e.get(d.annotation);\n    if (r) {\n      const c = r.bodies.find((f) => f.id === d.id);\n      if (c) {\n        n.delete(c.id);\n        const f = {\n          ...r,\n          bodies: r.bodies.filter((T) => T.id !== d.id)\n        };\n        return e.set(r.id, f), {\n          oldValue: r,\n          newValue: f,\n          bodiesDeleted: [c]\n        };\n      } else\n        console.warn(`Attempt to delete missing body ${d.id} from annotation ${d.annotation}`);\n    } else\n      console.warn(`Attempt to delete body from missing annotation ${d.annotation}`);\n  }, g = (d, r = O.LOCAL) => {\n    const c = l(d);\n    c && p(r, { updated: [c] });\n  }, a = (d, r = O.LOCAL) => {\n    const c = d.map((f) => l(f)).filter(Boolean);\n    c.length > 0 && p(r, { updated: c });\n  }, A = (d) => {\n    const r = e.get(d);\n    return r ? { ...r } : void 0;\n  }, m = (d) => {\n    const r = n.get(d);\n    if (r) {\n      const f = A(r).bodies.find((C) => C.id === d);\n      if (f)\n        return f;\n      console.error(`Store integrity error: body ${d} in index, but not in annotation`);\n    } else\n      console.warn(`Attempt to retrieve missing body: ${d}`);\n  }, R = (d, r) => {\n    if (d.annotation !== r.annotation)\n      throw \"Annotation integrity violation: annotation ID must be the same when updating bodies\";\n    const c = e.get(d.annotation);\n    if (c) {\n      const f = c.bodies.find((T) => T.id === d.id), C = {\n        ...c,\n        bodies: c.bodies.map((T) => T.id === f.id ? r : T)\n      };\n      return e.set(c.id, C), f.id !== r.id && (n.delete(f.id), n.set(r.id, C.id)), {\n        oldValue: c,\n        newValue: C,\n        bodiesUpdated: [{ oldBody: f, newBody: r }]\n      };\n    } else\n      console.warn(`Attempt to add body to missing annotation ${d.annotation}`);\n  }, N = (d, r, c = O.LOCAL) => {\n    const f = R(d, r);\n    f && p(c, { updated: [f] });\n  }, x = (d, r = O.LOCAL) => {\n    const c = d.map((f) => R({ id: f.id, annotation: f.annotation }, f)).filter(Boolean);\n    p(r, { updated: c });\n  }, _ = (d) => {\n    const r = e.get(d.annotation);\n    if (r) {\n      const c = {\n        ...r,\n        target: {\n          ...r.target,\n          ...d\n        }\n      };\n      return e.set(r.id, c), {\n        oldValue: r,\n        newValue: c,\n        targetUpdated: {\n          oldTarget: r.target,\n          newTarget: d\n        }\n      };\n    } else\n      console.warn(`Attempt to update target on missing annotation: ${d.annotation}`);\n  };\n  return {\n    addAnnotation: L,\n    addBody: U,\n    all: s,\n    bulkAddAnnotation: w,\n    bulkDeleteAnnotation: v,\n    bulkDeleteBodies: a,\n    bulkUpdateAnnotation: u,\n    bulkUpdateBodies: x,\n    bulkUpdateTargets: (d, r = O.LOCAL) => {\n      const c = d.map((f) => _(f)).filter(Boolean);\n      c.length > 0 && p(r, { updated: c });\n    },\n    clear: h,\n    deleteAnnotation: S,\n    deleteBody: g,\n    getAnnotation: A,\n    getBody: m,\n    observe: o,\n    unobserve: i,\n    updateAnnotation: y,\n    updateBody: N,\n    updateTarget: (d, r = O.LOCAL) => {\n      const c = _(d);\n      c && p(r, { updated: [c] });\n    }\n  };\n}, Oe = (e) => ({\n  ...e,\n  subscribe: (t) => {\n    const o = (i) => t(i.state);\n    return e.observe(o), t(e.all()), () => e.unobserve(o);\n  }\n});\nlet W = () => ({\n  emit(e, ...n) {\n    for (let t = 0, o = this.events[e] || [], i = o.length; t < i; t++)\n      o[t](...n);\n  },\n  events: {},\n  on(e, n) {\n    var t;\n    return ((t = this.events)[e] || (t[e] = [])).push(n), () => {\n      var o;\n      this.events[e] = (o = this.events[e]) == null ? void 0 : o.filter((i) => n !== i);\n    };\n  }\n});\nconst ae = 250, Te = (e) => {\n  const n = W(), t = [];\n  let o = -1, i = !1, p = 0;\n  const L = (a) => {\n    if (!i) {\n      const { changes: A } = a, m = performance.now();\n      if (m - p > ae)\n        t.splice(o + 1), t.push(A), o = t.length - 1;\n      else {\n        const R = t.length - 1;\n        t[R] = ie(t[R], A);\n      }\n      p = m;\n    }\n    i = !1;\n  };\n  e.observe(L, { origin: O.LOCAL });\n  const E = (a) => a && a.length > 0 && e.bulkDeleteAnnotation(a), y = (a) => a && a.length > 0 && e.bulkAddAnnotation(a, !1), u = (a) => a && a.length > 0 && e.bulkUpdateAnnotation(a.map(({ oldValue: A }) => A)), U = (a) => a && a.length > 0 && e.bulkUpdateAnnotation(a.map(({ newValue: A }) => A)), s = (a) => a && a.length > 0 && e.bulkAddAnnotation(a, !1), h = (a) => a && a.length > 0 && e.bulkDeleteAnnotation(a);\n  return {\n    canRedo: () => t.length - 1 > o,\n    canUndo: () => o > -1,\n    destroy: () => e.unobserve(L),\n    on: (a, A) => n.on(a, A),\n    redo: () => {\n      if (t.length - 1 > o) {\n        i = !0;\n        const { created: a, updated: A, deleted: m } = t[o + 1];\n        y(a), U(A), h(m), n.emit(\"redo\", t[o + 1]), o += 1;\n      }\n    },\n    undo: () => {\n      if (o > -1) {\n        i = !0;\n        const { created: a, updated: A, deleted: m } = t[o];\n        E(a), u(A), s(m), n.emit(\"undo\", t[o]), o -= 1;\n      }\n    }\n  };\n}, De = () => {\n  const { subscribe: e, set: n } = Y([]);\n  return {\n    subscribe: e,\n    set: n\n  };\n}, Re = (e, n, t, o) => {\n  const { store: i, selection: p, hover: L, viewport: E } = e, y = /* @__PURE__ */ new Map();\n  let u = [], U, s;\n  const h = (l, g) => {\n    y.has(l) ? y.get(l).push(g) : y.set(l, [g]);\n  }, w = (l, g) => {\n    const a = y.get(l);\n    a && a.indexOf(g) > 0 && a.splice(a.indexOf(g), 1);\n  }, b = (l, g, a) => {\n    y.has(l) && setTimeout(() => {\n      y.get(l).forEach((A) => {\n        if (t) {\n          const m = Array.isArray(g) ? g.map((N) => t.serialize(N)) : t.serialize(g), R = a ? a instanceof PointerEvent ? a : t.serialize(a) : void 0;\n          A(m, R);\n        } else\n          A(g, a);\n      });\n    }, 1);\n  }, S = () => {\n    const { selected: l } = p, g = (l || []).map(({ id: a }) => i.getAnnotation(a));\n    g.forEach((a) => {\n      const A = u.find((m) => m.id === a.id);\n      (!A || !B(A, a)) && b(\"updateAnnotation\", a, A);\n    }), u = u.map((a) => {\n      const A = g.find(({ id: m }) => m === a.id);\n      return A || a;\n    });\n  };\n  p.subscribe(({ selected: l }) => {\n    if (!(u.length === 0 && l.length === 0)) {\n      if (u.length === 0 && l.length > 0)\n        u = l.map(({ id: g }) => i.getAnnotation(g));\n      else if (u.length > 0 && l.length === 0)\n        u.forEach((g) => {\n          const a = i.getAnnotation(g.id);\n          a && !B(a, g) && b(\"updateAnnotation\", a, g);\n        }), u = [];\n      else {\n        const g = new Set(u.map((m) => m.id)), a = new Set(l.map(({ id: m }) => m));\n        u.filter((m) => !a.has(m.id)).forEach((m) => {\n          const R = i.getAnnotation(m.id);\n          R && !B(R, m) && b(\"updateAnnotation\", R, m);\n        }), u = [\n          // Remove annotations that were deselected\n          ...u.filter((m) => a.has(m.id)),\n          // Add editable annotations that were selected\n          ...l.filter(({ id: m }) => !g.has(m)).map(({ id: m }) => i.getAnnotation(m))\n        ];\n      }\n      b(\"selectionChanged\", u);\n    }\n  }), L.subscribe((l) => {\n    !U && l ? b(\"mouseEnterAnnotation\", i.getAnnotation(l)) : U && !l ? b(\"mouseLeaveAnnotation\", i.getAnnotation(U)) : U && l && (b(\"mouseLeaveAnnotation\", i.getAnnotation(U)), b(\"mouseEnterAnnotation\", i.getAnnotation(l))), U = l;\n  }), E == null || E.subscribe((l) => b(\"viewportIntersect\", l.map((g) => i.getAnnotation(g)))), i.observe((l) => {\n    o && (s && clearTimeout(s), s = setTimeout(S, 1e3));\n    const { created: g, deleted: a } = l.changes;\n    (g || []).forEach((m) => b(\"createAnnotation\", m)), (a || []).forEach((m) => b(\"deleteAnnotation\", m)), (l.changes.updated || []).filter((m) => [\n      ...m.bodiesCreated || [],\n      ...m.bodiesDeleted || [],\n      ...m.bodiesUpdated || []\n    ].length > 0).forEach(({ oldValue: m, newValue: R }) => {\n      const N = u.find((x) => x.id === m.id) || m;\n      u = u.map((x) => x.id === m.id ? R : x), b(\"updateAnnotation\", R, N);\n    });\n  }, { origin: O.LOCAL }), i.observe((l) => {\n    if (u) {\n      const g = new Set(u.map((A) => A.id)), a = (l.changes.updated || []).filter(({ newValue: A }) => g.has(A.id)).map(({ newValue: A }) => A);\n      a.length > 0 && (u = u.map((A) => {\n        const m = a.find((R) => R.id === A.id);\n        return m || A;\n      }));\n    }\n  }, { origin: O.REMOTE });\n  const v = (l) => (g) => {\n    const { updated: a } = g;\n    l ? (a || []).forEach((A) => b(\"updateAnnotation\", A.oldValue, A.newValue)) : (a || []).forEach((A) => b(\"updateAnnotation\", A.newValue, A.oldValue));\n  };\n  return n.on(\"undo\", v(!0)), n.on(\"redo\", v(!1)), { on: h, off: w, emit: b };\n}, Be = (e) => (n) => n.map((t) => e.serialize(t)), re = (e) => (n) => n.reduce((t, o) => {\n  const { parsed: i, error: p } = e.parse(o);\n  return p ? {\n    parsed: t.parsed,\n    failed: [...t.failed, o]\n  } : i ? {\n    parsed: [...t.parsed, i],\n    failed: t.failed\n  } : {\n    ...t\n  };\n}, { parsed: [], failed: [] }), xe = (e, n, t) => {\n  const { store: o, selection: i } = e, p = (v) => {\n    if (t) {\n      const { parsed: l, error: g } = t.parse(v);\n      l ? o.addAnnotation(l, O.REMOTE) : console.error(g);\n    } else\n      o.addAnnotation(v, O.REMOTE);\n  }, L = () => i.clear(), E = () => o.clear(), y = (v) => {\n    const l = o.getAnnotation(v);\n    return t && l ? t.serialize(l) : l;\n  }, u = () => t ? o.all().map(t.serialize) : o.all(), U = () => {\n    var g;\n    const l = (((g = i.selected) == null ? void 0 : g.map((a) => a.id)) || []).map((a) => o.getAnnotation(a)).filter(Boolean);\n    return t ? l.map(t.serialize) : l;\n  }, s = (v, l = !0) => fetch(v).then((g) => g.json()).then((g) => (w(g, l), g)), h = (v) => {\n    if (typeof v == \"string\") {\n      const l = o.getAnnotation(v);\n      if (o.deleteAnnotation(v), l)\n        return t ? t.serialize(l) : l;\n    } else {\n      const l = t ? t.parse(v).parsed : v;\n      if (l)\n        return o.deleteAnnotation(l), v;\n    }\n  }, w = (v, l = !0) => {\n    if (t) {\n      const { parsed: g, failed: a } = re(t)(v);\n      a.length > 0 && console.warn(`Discarded ${a.length} invalid annotations`, a), o.bulkAddAnnotation(g, l, O.REMOTE);\n    } else\n      o.bulkAddAnnotation(v, l, O.REMOTE);\n  }, b = (v) => {\n    v ? i.setSelected(v) : i.clear();\n  }, S = (v) => {\n    if (t) {\n      const l = t.parse(v).parsed, g = t.serialize(o.getAnnotation(l.id));\n      return o.updateAnnotation(l), g;\n    } else {\n      const l = o.getAnnotation(v.id);\n      return o.updateAnnotation(v), l;\n    }\n  };\n  return {\n    addAnnotation: p,\n    cancelSelected: L,\n    canRedo: n.canRedo,\n    canUndo: n.canUndo,\n    clearAnnotations: E,\n    getAnnotationById: y,\n    getAnnotations: u,\n    getSelected: U,\n    loadAnnotations: s,\n    redo: n.redo,\n    removeAnnotation: h,\n    setAnnotations: w,\n    setSelected: b,\n    undo: n.undo,\n    updateAnnotation: S\n  };\n}, ce = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nlet le = (e) => crypto.getRandomValues(new Uint8Array(e)), ue = (e, n, t) => {\n  let o = (2 << Math.log(e.length - 1) / Math.LN2) - 1, i = -~(1.6 * o * n / e.length);\n  return (p = n) => {\n    let L = \"\";\n    for (; ; ) {\n      let E = t(i), y = i;\n      for (; y--; )\n        if (L += e[E[y] & o] || \"\", L.length === p)\n          return L;\n    }\n  };\n}, fe = (e, n = 21) => ue(e, n, le), pe = (e = 21) => {\n  let n = \"\", t = crypto.getRandomValues(new Uint8Array(e));\n  for (; e--; )\n    n += ce[t[e] & 63];\n  return n;\n};\nconst Ie = () => ({ isGuest: !0, id: fe(\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_\", 20)() }), he = (e) => {\n  const n = JSON.stringify(e);\n  let t = 0;\n  for (let o = 0, i = n.length; o < i; o++) {\n    let p = n.charCodeAt(o);\n    t = (t << 5) - t + p, t |= 0;\n  }\n  return `${t}`;\n}, ge = (e) => e ? typeof e == \"object\" ? { ...e } : e : void 0, ke = (e, n) => (Array.isArray(e) ? e : [e]).map((t) => {\n  const { id: o, type: i, purpose: p, value: L, created: E, creator: y, ...u } = t;\n  return {\n    id: o || `temp-${he(t)}`,\n    annotation: n,\n    type: i,\n    purpose: p,\n    value: L,\n    created: E ? new Date(E) : void 0,\n    creator: ge(y),\n    ...u\n  };\n}), Ne = (e) => e.map((n) => {\n  var o, i;\n  const t = { ...n };\n  return delete t.annotation, (o = t.id) != null && o.startsWith(\"temp-\") && delete t.id, { ...t, created: (i = t.created) == null ? void 0 : i.toISOString() };\n}), me = [\n  \"#ff7c00\",\n  // orange\n  \"#1ac938\",\n  // green\n  \"#e8000b\",\n  // red\n  \"#8b2be2\",\n  // purple\n  \"#9f4800\",\n  // brown\n  \"#f14cc1\",\n  // pink\n  \"#ffc400\",\n  // khaki\n  \"#00d7ff\",\n  // cyan\n  \"#023eff\"\n  // blue\n], Ae = () => {\n  const e = [...me];\n  return { assignRandomColor: () => {\n    const o = Math.floor(Math.random() * e.length), i = e[o];\n    return e.splice(o, 1), i;\n  }, releaseColor: (o) => e.push(o) };\n}, be = () => {\n  const e = Ae();\n  return { addUser: (o, i) => {\n    const p = e.assignRandomColor();\n    return {\n      label: i.name || i.id,\n      avatar: i.avatar,\n      color: p\n    };\n  }, removeUser: (o) => e.releaseColor(o.appearance.color) };\n}, Ee = (e, n) => e.every((t) => e.includes(t)) && n.every((t) => e.includes(t)), $e = pe(), ze = (e = be()) => {\n  const n = W(), t = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), i = (s, h) => {\n    if (t.has(s)) {\n      console.warn(\"Attempt to add user that is already present\", s, h);\n      return;\n    }\n    const w = e.addUser(s, h);\n    t.set(s, {\n      ...h,\n      presenceKey: s,\n      appearance: w\n    });\n  }, p = (s) => {\n    const h = t.get(s);\n    if (!h) {\n      console.warn(\"Attempt to remove user that is not present\", s);\n      return;\n    }\n    e.removeUser(h), t.delete(s);\n  }, L = (s) => {\n    const h = new Set(s.map((S) => S.presenceKey)), w = s.filter(({ presenceKey: S }) => !t.has(S)), b = Array.from(t.values()).filter((S) => !h.has(S.presenceKey));\n    w.forEach(({ presenceKey: S, user: v }) => i(S, v)), b.forEach((S) => {\n      const { presenceKey: v } = S;\n      o.has(v) && n.emit(\"selectionChange\", S, null), p(v);\n    }), (w.length > 0 || b.length > 0) && n.emit(\"presence\", u());\n  }, E = (s, h) => {\n    const w = t.get(s);\n    if (!w) {\n      console.warn(\"Activity notification from user that is not present\");\n      return;\n    }\n    const b = o.get(s);\n    (!b || !Ee(b, h)) && (o.set(s, h), n.emit(\"selectionChange\", w, h));\n  }, y = (s, h) => {\n    const w = t.get(s);\n    if (!w) {\n      console.warn(\"Selection change for user that is not present\", s);\n      return;\n    }\n    h ? o.set(s, h) : o.delete(s), n.emit(\"selectionChange\", w, h);\n  }, u = () => [...Array.from(t.values())];\n  return {\n    getPresentUsers: u,\n    notifyActivity: E,\n    on: (s, h) => n.on(s, h),\n    syncUsers: L,\n    updateSelection: y\n  };\n};\nexport {\n  oe as Ignore,\n  O as Origin,\n  $e as PRESENCE_KEY,\n  G as PointerSelectAction,\n  Ie as createAnonymousGuest,\n  xe as createBaseAnnotator,\n  Ue as createBody,\n  be as createDefaultAppearenceProvider,\n  Ce as createHoverState,\n  Re as createLifecyleObserver,\n  ze as createPresenceState,\n  we as createSelectionState,\n  Se as createStore,\n  Te as createUndoStack,\n  De as createViewportState,\n  Ae as defaultColorProvider,\n  P as diffAnnotations,\n  Le as getContributors,\n  ie as mergeChanges,\n  H as onPointerSelect,\n  re as parseAll,\n  ke as parseW3CBodies,\n  ge as parseW3CUser,\n  Be as serializeAll,\n  Ne as serializeW3CBodies,\n  se as shouldNotify,\n  Oe as toSvelteStore\n};\n//# sourceMappingURL=annotorious-core.es.js.map\n","import { v4 as uuidv4 } from 'uuid';\nimport { parseW3CUser, parseW3CBodies, serializeW3CBodies } from '@annotorious/core';\nimport type { FormatAdapter, ParseResult, W3CAnnotation } from '@annotorious/core';\nimport { ShapeType } from '../core';\nimport type { ImageAnnotation, RectangleGeometry } from '../core';\nimport type {FragmentSelector } from './fragment';\nimport { parseFragmentSelector, serializeFragmentSelector } from './fragment';\nimport type { SVGSelector } from './svg';\nimport { parseSVGSelector, serializeSVGSelector } from './svg';\nimport type { W3CImageAnnotation } from './W3CImageAnnotation';\n\nexport type W3CImageFormatAdapter = FormatAdapter<ImageAnnotation, W3CImageAnnotation>;\n\nexport const W3CImageFormat = (\n  source: string,\n  invertY: boolean = false\n): W3CImageFormatAdapter => {\n\n  const parse = (serialized: W3CAnnotation) =>\n    parseW3CImageAnnotation(serialized, invertY);\n\n  const serialize = (annotation: ImageAnnotation) =>\n    serializeW3CImageAnnotation(annotation, source);\n\n  return { parse, serialize }\n}\n\nexport const parseW3CImageAnnotation = (\n  annotation: W3CAnnotation, \n  invertY: boolean = false\n): ParseResult<ImageAnnotation> => {\n  const annotationId = annotation.id || uuidv4();\n\n  const { \n    creator,\n    created,\n    modified,\n    body, \n    ...rest \n  } = annotation;\n\n  const bodies = parseW3CBodies(body, annotationId);\n\n  const w3cTarget = Array.isArray(annotation.target) \n    ? annotation.target[0] : annotation.target;\n\n  const w3cSelector = Array.isArray(w3cTarget.selector) \n    ? w3cTarget.selector[0] : w3cTarget.selector;\n\n  const selector = \n    w3cSelector?.type === 'FragmentSelector' ?\n      parseFragmentSelector(w3cSelector as FragmentSelector, invertY) :\n    w3cSelector?.type === 'SvgSelector' ?\n      parseSVGSelector(w3cSelector as SVGSelector) : undefined;\n\n  return selector ? { \n    parsed: {\n      ...rest,\n      id: annotationId,\n      bodies,\n      target: {\n        created: created ? new Date(created) : undefined,\n        creator: parseW3CUser(creator),\n        updated: modified ? new Date(modified) : undefined,\n        ...(Array.isArray(rest.target) ? rest.target[0] : rest.target),\n        annotation: annotationId,\n        selector\n      }\n    }\n  } : {\n    error: Error(`Invalid selector: ${JSON.stringify(w3cSelector)}`)\n  };\n\n}\n\nexport const serializeW3CImageAnnotation = (\n  annotation: ImageAnnotation, \n  source: string\n): W3CImageAnnotation => {\n  const { \n    selector, \n    creator, \n    created, \n    updated,\n    updatedBy, // Excluded from serialization\n    ...rest \n  } = annotation.target;\n\n  const w3CSelector =\n    selector.type == ShapeType.RECTANGLE ?\n      serializeFragmentSelector(selector.geometry as RectangleGeometry) :\n      serializeSVGSelector(selector);\n\n  const serialized = {\n    ...annotation,\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\n    id: annotation.id,\n    type: 'Annotation',\n    body: serializeW3CBodies(annotation.bodies),\n    created: created?.toISOString(),\n    creator,\n    modified: updated?.toISOString(),\n    target: {\n      ...rest,\n      source,\n      selector: w3CSelector\n    }\n  } as W3CImageAnnotation;\n\n  // Remove core properties that should not appear in the W3C annotation\n  delete serialized.bodies;\n  \n  if ('annotation' in serialized.target)\n    delete serialized.target.annotation;\n\n  return serialized;\n}\n","<script lang=\"ts\">\n  import { boundsFromPoints } from '../../../model';\n  import type { Polygon, PolygonGeometry, Shape } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor, Handle } from '..';\n\n  /** Props */\n  export let shape: Polygon;\n  export let computedStyle: string | undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  const editor = (polygon: Shape, handle: string, delta: [number, number]) => {\n    let points: [number, number][];\n\n    const geom = (polygon.geometry) as PolygonGeometry;\n\n    if (handle === 'SHAPE') {\n      points = geom.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\n    } else {\n      points = geom.points.map(([x, y], idx) =>\n        handle === `HANDLE-${idx}` ? [x + delta[0], y + delta[1]] : [x, y]\n      );\n    }\n\n    const bounds = boundsFromPoints(points);\n\n    return {\n      ...polygon,\n      geometry: { points, bounds }\n    }\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:change \n  on:grab\n  on:release\n  let:grab={grab}>\n\n  <polygon\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab('SHAPE')}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon\n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab('SHAPE')}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  {#each geom.points as point, idx}\n    <Handle \n      on:pointerdown={grab(`HANDLE-${idx}`)}\n      x={point[0]} y={point[1]} \n      scale={viewportScale} />\n  {/each}\n</Editor>","export const distance = (a: [number, number], b: [number, number]): number => {\n  const dx = Math.abs(b[0] - a[0]);\n  const dy = Math.abs(b[1] - a[1]);\n\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n}","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable } from 'svelte/store';\n\nconst setSize = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGElement) => {\n  const { naturalWidth, naturalHeight } = (image as HTMLImageElement);\n\n  if (!naturalWidth && !naturalHeight) {\n    // Might be because a) the image has not loaded yet, or b) because it's not \n    // an image element (but maybe a CANVAS etc.)! Allow for both possibilities.\n    const { width, height } = image;\n\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n    image.addEventListener('load', event => {\n      const img = event.target as HTMLImageElement;\n      svg.setAttribute('viewBox', `0 0 ${img.naturalWidth} ${img.naturalHeight}`);\n    });\n  } else {\n    svg.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\n  }\n\n}\n\nexport const enableResponsive = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGSVGElement) => {\n\n  setSize(image, svg);\n\n  const { subscribe, set } = writable(1);\n\n  let resizeObserver: ResizeObserver;\n\n  if (window.ResizeObserver) {\n    resizeObserver = new ResizeObserver(() => {\n      const svgBounds = svg.getBoundingClientRect();\n\n      const { width, height } = svg.viewBox.baseVal;\n  \n      const scale = Math.max(\n        svgBounds.width / width,\n        svgBounds.height / height\n      );\n  \n      set(scale);\n    });\n  \n    resizeObserver.observe(svg.parentElement!);\n  }\n\n  const destroy = () => {\n    if (resizeObserver)\n      resizeObserver.disconnect();\n  }\n\n  return { destroy, subscribe };\n\n}\n\n","export const isTouch = 'ontouchstart' in window \n  || navigator.maxTouchPoints > 0\n  // @ts-ignore\n  || navigator.msMaxTouchPoints > 0;\n","<script lang=\"ts\">\n  import { isTouch } from '../utils';\n\n  /** props **/\n  export let x: number;\n  export let y: number;\n  export let scale: number;\n  export let radius: number = 30;\n\n  let touched = false;\n\n  const onPointerDown = (event: PointerEvent) => {\n    if (event.pointerType === 'touch')\n      touched = true;\n  }\n\n  const onPointerUp = () =>\n    touched = false;\n\n  $: handleSize = 10 / scale;\n</script>\n\n{#if isTouch}\n  <g class=\"a9s-touch-handle\">\n    <circle \n      cx={x} \n      cy={y} \n      r={radius / scale}\n      class=\"a9s-touch-halo\"\n      class:touched={touched}\n      on:pointerdown\n      on:pointerdown={onPointerDown} \n      on:pointerup={onPointerUp} />\n\n    <rect \n      class={`a9s-handle ${$$props.class || ''}`.trim()}\n      x={x - handleSize / 2} \n      y={y - handleSize / 2} \n      width={handleSize} \n      height={handleSize}\n      on:pointerdown\n      on:pointerdown={onPointerDown} \n      on:pointerup={onPointerUp}  />\n  </g>\n{:else}\n  <rect \n    class={`a9s-handle ${$$props.class || ''}`.trim()}\n    x={x - handleSize / 2} \n    y={y - handleSize / 2} \n    width={handleSize} \n    height={handleSize} \n    on:pointerdown />\n{/if}\n\n<style>\n  .a9s-touch-halo {\n    fill: transparent;\n    stroke-width: 0;\n  }\n\n  .a9s-touch-halo.touched {\n    fill: rgba(255, 255, 255, 0.25);\n  }\n\n\n</style>\n","<script lang=\"ts\">\n  import Handle from '../Handle.svelte';\n  import type { Rectangle, Shape } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor } from '..';\n\n  /** Props */\n  export let shape: Rectangle;\n  export let computedStyle: string | undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  const editor = (rectangle: Shape, handle: string, delta: [number, number]) => {\n    const initialBounds = rectangle.geometry.bounds;\n\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\n\n    const [dx, dy] = delta;\n\n    if (handle === 'SHAPE') {\n      x0 += dx;\n      x1 += dx;\n      y0 += dy;\n      y1 += dy;\n    } else {\n      switch (handle) {\n        case 'TOP':\n        case 'TOP_LEFT':\n        case 'TOP_RIGHT': {\n          y0 += dy;\n          break;\n        }\n\n        case 'BOTTOM':\n        case 'BOTTOM_LEFT':\n        case 'BOTTOM_RIGHT': {\n          y1 += dy;\n          break;\n        }\n      }\n\n      switch (handle) {\n        case 'LEFT':\n        case 'TOP_LEFT':\n        case 'BOTTOM_LEFT': {\n          x0 += dx;\n          break;\n        }\n\n        case 'RIGHT':\n        case 'TOP_RIGHT':\n        case 'BOTTOM_RIGHT': {\n          x1 += dx;\n          break;\n        }\n      }\n    }\n\n    const x = Math.min(x0, x1);\n    const y = Math.min(y0, y1);\n    const w = Math.abs(x1 - x0);\n    const h = Math.abs(y1 - y0);\n\n    return {\n      ...rectangle,\n      geometry: {\n        x, y, w, h,\n        bounds: {\n          minX: x,\n          minY: y,\n          maxX: x + w,\n          maxY: y + h\n        }\n      }\n    };\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:grab\n  on:change \n  on:release\n  let:grab={grab}>\n\n  <rect \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab('SHAPE')}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab('SHAPE')}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-top\" \n    on:pointerdown={grab('TOP')}\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-right\"\n    on:pointerdown={grab('RIGHT')}\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \n    on:pointerdown={grab('BOTTOM')}\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-left\" \n    on:pointerdown={grab('LEFT')}\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\n\n  <Handle\n    class=\"a9s-corner-handle-topleft\"\n    on:pointerdown={grab('TOP_LEFT')}\n    x={geom.x} y={geom.y}\n    scale={viewportScale} /> \n\n  <Handle\n    class=\"a9s-corner-handle-topright\"\n    on:pointerdown={grab('TOP_RIGHT')}\n    x={geom.x + geom.w} y={geom.y} \n    scale={viewportScale} />\n  \n  <Handle \n    class=\"a9s-corner-handle-bottomright\"\n    on:pointerdown={grab('BOTTOM_RIGHT')}\n    x={geom.x + geom.w} y={geom.y + geom.h} \n    scale={viewportScale} />\n    \n  <Handle \n    class=\"a9s-corner-handle-bottomleft\"\n    on:pointerdown={grab('BOTTOM_LEFT')}\n    x={geom.x} y={geom.y + geom.h} \n    scale={viewportScale} />\n</Editor>","import { ShapeType, type Shape } from '../../model';\nimport type { SvelteComponent } from 'svelte';\nimport { PolygonEditor } from './polygon';\nimport { RectangleEditor } from './rectangle';\n\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\n  [ShapeType.RECTANGLE, RectangleEditor],\n  [ShapeType.POLYGON, PolygonEditor]\n]);\n\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\n\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n  REGISTERED.set(shapeType, editor);","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { Shape } from '../../model';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ grab: PointerEvent, release: PointerEvent, change: Shape }>();\n\n  /** Props */\n  export let shape: Shape;\n  export let editor: (shape: Shape, handle: string, delta: [number, number]) => Shape;\n  export let transform: Transform;\n\n  let grabbedHandle: string | undefined;\n\n  let origin: [number, number];\n\n  let initialShape: Shape | undefined;\n\n  const onGrab = (handle: string) => (evt: PointerEvent) => {\n    grabbedHandle = handle;\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n    initialShape = shape;\n\n    const target = evt.target as Element;\n    target.setPointerCapture(evt.pointerId);\n\n    dispatch('grab', evt);\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    if (grabbedHandle) {\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\n\n      shape = editor(initialShape!, grabbedHandle, delta);\n      \n      dispatch('change', shape);\n    }\n  }\n\n  const onRelease = (evt: PointerEvent) => {    \n    const target = evt.target as Element;\n    target.releasePointerCapture(evt.pointerId);\n\n    grabbedHandle = undefined;\n\n    initialShape = shape;\n    \n    dispatch('release', evt);\n  }\n</script>\n\n<g\n  class=\"a9s-annotation selected\"\n  on:pointerup={onRelease}\n  on:pointermove={onPointerMove}>\n\n  <slot grab={onGrab} />\n</g>","import type { DrawingStyleExpression } from '@annotorious/core';\nimport type { ImageAnnotation } from '../../model';\n\nexport const computeStyle = (\n  annotation: ImageAnnotation, \n  style?: DrawingStyleExpression<ImageAnnotation>\n) => {\n  const computed = typeof style === 'function' ? style(annotation) : style;\n\n  if (computed) {\n    const { fill, fillOpacity } = computed;\n\n    let css = '';\n    \n    if (fill)\n      css += `fill:${fill};stroke:${fill};`;\n    \n    css += `fill-opacity:${fillOpacity || '0.25'};`;\n\n    return css;\n  }\n}","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\n  import type { ImageAnnotation, Shape } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ grab: PointerEvent, release: PointerEvent, change: Shape }>();\n\n  /** Props */\n  export let annotation: ImageAnnotation;\n  export let editor: typeof SvelteComponent;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n  export let target: SVGGElement;\n  export let transform: Transform;\n  export let viewportScale: number;\n\n  let editorComponent: SvelteComponent;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  $: if (annotation) editorComponent?.$set({ shape: annotation.target.selector });\n  $: if (editorComponent) editorComponent.$set({ transform });\n  $: if (editorComponent) editorComponent.$set({ viewportScale });\n\n  onMount(() => {\n    editorComponent = new editor({\n      target,\n      props: { shape: annotation.target.selector, computedStyle, transform, viewportScale }\n    });\n\n    editorComponent.$on('change', event => {\n      editorComponent.$$set({ shape: event.detail });\n      dispatch('change', event.detail);\n    });\n\n    editorComponent.$on('grab', event => dispatch('grab', event.detail));\n    editorComponent.$on('release', event => dispatch('release', event.detail));\n\n    return () => {\n      editorComponent.$destroy();\n    }\n  });\n</script>","<script lang=\"ts\">\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\n  import type { Transform } from '../Transform';\n  import type { Shape } from 'src/model';\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\n\n  const dispatch = createEventDispatcher<{ create: Shape }>();\n\n  /** Props **/\n  export let drawingMode: DrawingMode;\n  export let target: SVGGElement;\n  export let tool: typeof SvelteComponent;\n  export let transform: Transform;\n  export let viewportScale: number;\n\n  let toolComponent: SvelteComponent;\n\n  $: if (toolComponent) toolComponent.$set({ transform });\n  $: if (toolComponent) toolComponent.$set({ viewportScale });\n\n  onMount(() => {\n    const svg = target.closest('svg');\n\n    const cleanup: Function[] = [];\n\n    const addEventListener = (name: keyof SVGSVGElementEventMap, handler: EventListenerOrEventListenerObject, capture?: boolean) => {\n      svg?.addEventListener(name, handler, capture);\n      cleanup.push(() => svg?.removeEventListener(name, handler, capture));\n    }\n\n    toolComponent = new tool({\n      target,\n      props: { \n        addEventListener,\n        drawingMode,\n        transform, \n        viewportScale\n      }\n    });\n\n    toolComponent.$on('create', \n      event => dispatch('create', event.detail));\n\n    return () => {\n      cleanup.forEach(fn => fn());\n      toolComponent.$destroy();\n    }\n  });\n</script>","<script lang=\"ts\">\n  import { createEventDispatcher, onMount } from 'svelte';\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\n  import { ShapeType, type Rectangle } from '../../../model';\n  import type { Transform } from '../..';\n\n  const dispatch = createEventDispatcher<{ create: Rectangle }>();\n  \n  /** Props **/\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\n  export let drawingMode: DrawingMode;\n  export let transform: Transform;\n\n  let lastPointerDown: number;\n\n  let origin: [x: number, y: number] | undefined; \n\n  let anchor: [number, number] | undefined;\n\n  let x: number, y: number, w: number, h: number;\n\n  const onPointerDown = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    lastPointerDown = performance.now();\n\n    if (drawingMode === 'drag') {\n      origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n      anchor = origin;\n\n      x = origin[0];\n      y = origin[1];\n      w = 1;\n      h = 1;\n    }\n  }\n\n  const onPointerMove = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    if (origin) {\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      x = Math.min(anchor[0], origin[0]);\n      y = Math.min(anchor[1], origin[1]);\n      w = Math.abs(anchor[0] - origin[0]);\n      h = Math.abs(anchor[1] - origin[1]);\n    }\n  }\n    \n  const onPointerUp = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    const timeDifference = performance.now() - lastPointerDown;\n\n    if (drawingMode === 'click') {\n      // Not a single click - ignore\n      if (timeDifference > 300)\n        return;\n\n      evt.stopPropagation();\n\n      if (origin) {\n        stopDrawing();\n      } else {\n        // Start drawing\n        origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n        anchor = origin;\n\n        x = origin[0];\n        y = origin[1];\n        w = 1;\n        h = 1;\n      }\n    } else if (origin) {\n      if (timeDifference > 300 || w * h > 100) {\n        evt.stopPropagation();\n        stopDrawing();\n      } else {\n        origin = undefined;\n        anchor = undefined;\n      }\n    }\n  }\n\n  const stopDrawing = () => {\n    // Require 4x4 pixels minimum\n    if (w * h > 15) {\n      const shape: Rectangle = {\n        type: ShapeType.RECTANGLE, \n        geometry: {\n          bounds: {\n            minX: x, \n            minY: y,\n            maxX: x + w,\n            maxY: y + h\n          },\n          x, y, w, h\n        }\n      }\n\n      dispatch('create', shape);\n    }\n    \n    origin = undefined;\n    anchor = undefined;\n  }\n\n  onMount(() => {\n    addEventListener('pointerdown', onPointerDown);\n    addEventListener('pointermove', onPointerMove);\n    addEventListener('pointerup', onPointerUp, true);\n  });\n</script>\n\n<g class=\"a9s-annotation a9s-rubberband\">\n  {#if origin}\n    <rect\n      class=\"a9s-outer\"\n      x={x} \n      y={y} \n      width={w} \n      height={h} />\n\n    <rect\n      class=\"a9s-inner\"\n      x={x} \n      y={y} \n      width={w} \n      height={h} />\n  {/if}\n</g>","<script lang=\"ts\">\n  import { onMount, createEventDispatcher } from 'svelte';\n  import type { DrawingMode } from '../../../AnnotoriousOpts';\n  import { boundsFromPoints, computeArea, ShapeType, type Polygon } from '../../../model';\n  import { distance } from '../../utils';\n  import type { Transform } from '../..';\n\n  const dispatch = createEventDispatcher<{ create: Polygon }>();\n\n  /** Props **/\n  export let addEventListener: (type: string, fn: EventListener, capture?: boolean) => void;\n  export let drawingMode: DrawingMode;\n  export let transform: Transform;\n  export let viewportScale = 1;\n\n  let lastPointerDown: { timeStamp: number, offsetX: number, offsetY: number };\n\n  let points: [number, number][] = [];\n  \n  let cursor: [number, number] | undefined;\n\n  // Keep track of the user keeping the finger\n  // in place. Long pauses will be interpreted like a \n  // double click and close the shape.\n  let touchPauseTimer: number | undefined;\n\n  let isClosable: boolean = false;\n\n  const CLOSE_DISTANCE = 20;\n\n  const TOUCH_PAUSE_LIMIT = 1500;\n\n  $: handleSize = 10 / viewportScale;\n\n  const onPointerDown = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    // Note that the event itself is ephemeral!\n    const { timeStamp, offsetX, offsetY } = evt;\n    lastPointerDown = { timeStamp, offsetX, offsetY };\n\n    if (drawingMode === 'drag') {\n      if (points.length === 0) {\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\n        points.push(point);\n\n        cursor = point;\n      }\n    }\n  }\n\n  const onPointerMove = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    if (touchPauseTimer) clearTimeout(touchPauseTimer);\n\n    if (points.length > 0) {\n      cursor = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      if (points.length >  2) {\n        const d = distance(cursor, points[0]) * viewportScale;\n        isClosable = d < CLOSE_DISTANCE;\n      }\n\n      if (evt.pointerType === 'touch') {\n        touchPauseTimer = setTimeout(() => {\n          onDblClick();\n        }, TOUCH_PAUSE_LIMIT);\n      }\n    }\n  }\n\n  const onPointerUp = (event: Event) => {\n    const evt = event as PointerEvent;\n\n    if (touchPauseTimer) clearTimeout(touchPauseTimer);\n\n    if (drawingMode === 'click') {\n      const timeDifference = evt.timeStamp - lastPointerDown.timeStamp;\n\n      const d = distance(\n        [lastPointerDown.offsetX, lastPointerDown.offsetY], \n        [evt.offsetX, evt.offsetY]);\n\n      if (timeDifference > 300 || d > 15) // Not a single click - ignore\n        return;\n\n      if (isClosable) {\n        stopDrawing();\n      } else if (points.length === 0) {\n        // Start drawing\n        const point = transform.elementToImage(evt.offsetX, evt.offsetY);\n        points.push(point);\n\n        cursor = point;\n      } else {\n        points.push(cursor!);\n      }\n    } else {\n      // Require minimum drag of 4px\n      if (points.length === 1) {\n        const dist = distance(points[0], cursor!);\n\n        if (dist <= 4) {\n          // Cancel\n          points = [];\n          cursor = undefined;\n\n          return;\n        }\n      }\n\n      // Stop click event from propagating if we're drawing\n      evt.stopImmediatePropagation();\n\n      if (isClosable) {\n        stopDrawing();\n      } else {\n        points.push(cursor!);\n      }\n    }\n  }\n\n  const onDblClick = () => {\n    if (!cursor) return;\n\n    // Require min 3 points (incl. cursor) and minimum\n    // polygon area\n    const p = [...points, cursor];\n\n    const shape: Polygon = {\n      type: ShapeType.POLYGON, \n      geometry: {\n        bounds: boundsFromPoints(p),\n        points: p\n      }\n    }\n\n    const area = computeArea(shape);\n    if (area > 4) {\n      points = [];\n      cursor = undefined;\n    \n      dispatch('create', shape);\n    }\n  }\n\n  const stopDrawing = () => {\n    const shape: Polygon = {\n      type: ShapeType.POLYGON, \n      geometry: {\n        bounds: boundsFromPoints(points),\n        points: [...points]\n      }\n    }\n\n    points = [];\n    cursor = undefined;\n  \n    dispatch('create', shape);\n  }\n\n  onMount(() => {\n    addEventListener('pointerdown', onPointerDown, true);\n    addEventListener('pointermove', onPointerMove);\n    addEventListener('pointerup', onPointerUp, true);\n    addEventListener('dblclick', onDblClick, true);\n  });\n</script>\n\n<g class=\"a9s-annotation a9s-rubberband\">\n  {#if cursor}\n    {@const coords = (isClosable ? points : [...points, cursor]).map(xy => xy.join(',')).join(' ')}\n      <polygon \n        class=\"a9s-outer\"\n        points={coords} />\n\n      <polygon \n        class=\"a9s-inner\"\n        points={coords} />\n        \n    {#if isClosable}\n      <rect \n        class=\"a9s-corner-handle\"\n        x={points[0][0] - handleSize / 2} \n        y={points[0][1] - handleSize / 2} \n        height={handleSize} \n        width={handleSize} />\n    {/if}\n  {/if}\n</g>","import type { SvelteComponent } from 'svelte';\nimport { RubberbandRectangle } from './rectangle';\nimport { RubberbandPolygon } from './polygon';\nimport type { DrawingMode } from '../../AnnotoriousOpts';\n\nexport type DrawingTool = 'rectangle' | 'polygon' | string;\n\nexport type DrawingToolOpts = {\n\n  drawingMode?: DrawingMode;\n\n  [key: string]: any;\n\n}\n\n// @ts-ignore\nconst REGISTERED = new Map<DrawingTool, { tool: typeof SvelteComponent, opts?: DrawingToolOpts }>([\n  ['rectangle', { tool: RubberbandRectangle }],\n  ['polygon', { tool: RubberbandPolygon }]\n]);\n\nexport const listDrawingTools = () => [...REGISTERED.keys()];\n\nexport const getTool = (name: string) => REGISTERED.get(name);\n  \nexport const registerTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\n  REGISTERED.set(name, { tool, opts });\n","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import type { Geometry, EllipseGeometry, ImageAnnotation } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props */\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { cx, cy, rx, ry } = geom as EllipseGeometry;\n</script>\n\n<g data-id={annotation.id}>\n  <ellipse\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n\n  <ellipse\n    class=\"a9s-inner\"\n    style={computedStyle}\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n</g>\n","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import type { Geometry, ImageAnnotation, PolygonGeometry } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props **/\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { points } = geom as PolygonGeometry;\n</script>\n\n<g data-id={annotation.id}>\n  <polygon \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    points={points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon \n    class=\"a9s-inner\"\n    style={computedStyle}\n    points={points.map(xy => xy.join(',')).join(' ')} />\n</g>","<script lang=\"ts\">\n  import type { DrawingStyleExpression } from '@annotorious/core';\n  import type { Geometry, ImageAnnotation, RectangleGeometry } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props **/\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  $: ({ x, y, w, h } = geom as RectangleGeometry);\n</script>\n\n<g data-id={annotation.id}>\n  <rect\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n\n  <rect\n    class=\"a9s-inner\"\n    style={computedStyle}\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n</g>\n","export interface Transform { \n\n  elementToImage: (offsetX: number, offsetY: number) => [ number, number ] \n\n}\n\nexport const IdentityTransform: Transform = {\n\n  elementToImage:  (offsetX: number, offsetY: number) => ([ offsetX, offsetY ])\n\n}\n\nexport const createSVGTransform = (svg: SVGSVGElement): Transform => ({\n\n  elementToImage: (offsetX: number, offsetY: number) => {\n    const bbox = svg.getBoundingClientRect();\n\n    const pt = svg.createSVGPoint();\n    pt.x = offsetX + bbox.x;\n    pt.y = offsetY + bbox.y;\n  \n    const { x, y } = pt.matrixTransform(svg.getScreenCTM()!.inverse());\n    return [x, y];\n  }\n\n});","import { createEventDispatcher } from 'svelte';\nimport type { SvelteImageAnnotationStore } from '../state';\nimport type { ImageAnnotation } from '../model';\n\nexport interface SVGAnnotationLayerPointerEvent {\n    \n  originalEvent: PointerEvent;\n  \n  annotation?: ImageAnnotation;\n\n}\n\n// Maximum amount of ms between pointer down and up to make it a click\nconst MAX_CLICK_DURATION = 250;\n\nexport const addEventListeners = (svg: SVGSVGElement, store: SvelteImageAnnotationStore) => {\n  const dispatch = createEventDispatcher<{ click: SVGAnnotationLayerPointerEvent}>();\n\n  let lastPointerDown: number;\n\n  const onPointerDown = () =>\n    lastPointerDown = performance.now();\n\n  const onPointerUp = (evt: PointerEvent) => {\n    const duration = performance.now() - lastPointerDown;\n\n    if (duration < MAX_CLICK_DURATION) {\n      const { x, y } = getSVGPoint(evt, svg);\n\n      const annotation = store.getAt(x, y);\n\n      if (annotation)\n        dispatch('click', { originalEvent: evt, annotation });\n      else\n        dispatch('click', { originalEvent: evt });\n    }\n  }\n\n  return { onPointerDown, onPointerUp };\n}\n\nconst getSVGPoint = (evt: PointerEvent, svg: SVGSVGElement) => {\n  const pt = svg.createSVGPoint();\n  const bbox = svg.getBoundingClientRect();\n\n  const x = evt.clientX - bbox.x;\n  const y = evt.clientY - bbox.y;\n\n  const { left, top } = svg.getBoundingClientRect();\n  pt.x = x + left;\n  pt.y = y + top;\n\n  return pt.matrixTransform(svg.getScreenCTM()!.inverse());\n}","<script lang=\"ts\">\n  import { SvelteComponent, onMount } from 'svelte';\n  import { v4 as uuidv4 } from 'uuid';\n  import type { DrawingStyleExpression, StoreChangeEvent, User } from '@annotorious/core';\n  import { ShapeType } from '../model';\n  import type { ImageAnnotation, Shape} from '../model';\n  import { getEditor as _getEditor, EditorMount } from './editors';\n  import { Ellipse, Polygon, Rectangle} from './shapes';\n  import { getTool, listDrawingTools, ToolMount } from './tools';\n  import { enableResponsive } from './utils';\n  import { createSVGTransform } from './Transform';\n  import { addEventListeners } from './SVGAnnotationLayerPointerEvent';\n  import type { SvelteImageAnnotatorState } from 'src/state';\n  import type { DrawingMode } from 'src/AnnotoriousOpts';\n\n  /** Props **/\n  export let drawingEnabled: boolean;\n  export let image: HTMLImageElement | HTMLCanvasElement;\n  export let preferredDrawingMode: DrawingMode;\n  export let state: SvelteImageAnnotatorState;\n  export let style: DrawingStyleExpression<ImageAnnotation> | undefined = undefined;\n  export let toolName: string = listDrawingTools()[0];\n  export let user: User;\n  export let visible = true;\n\n  $: ({ tool, opts } = getTool(toolName) || { tool: undefined, opts: undefined });\n\n  $: drawingMode = opts?.drawingMode || preferredDrawingMode;\n\n  /** Drawing tool layer **/\n  let drawingEl: SVGGElement;\n\n  /** Responsive scaling **/\n  let svgEl: SVGSVGElement;\n    \n  let scale: ReturnType<typeof enableResponsive>;\n\n  onMount(() => scale = enableResponsive(image, svgEl));\n\n  $: transform = createSVGTransform(svgEl);\n\n  /** Selection tracking */\n  const { selection, store } = state;\n\n  $: ({ onPointerDown, onPointerUp } = addEventListeners(svgEl, store));\n\n  let storeObserver: (event: StoreChangeEvent<ImageAnnotation>) => void | undefined;\n\n  let editableAnnotations: ImageAnnotation[] | undefined;\n\n  $: isEditable = (a: ImageAnnotation) => $selection.selected.find(s => s.id === a.id && s.editable);\n\n  $: trackSelection($selection.selected);\n\n  const trackSelection = (selected: { id: string, editable?: boolean }[]) => {\n    if (storeObserver)\n      store.unobserve(storeObserver);\n\n    // Track only editable annotations\n    const editableIds = \n      selected.filter(({ editable }) => editable).map(({ id }) => id);\n\n    if (editableIds.length > 0) {\n      // Resolve selected IDs from the store\n      editableAnnotations = editableIds.map(id => store.getAnnotation(id)!).filter(Boolean);\n\n      // Track updates on the editable annotations\n      storeObserver = (event: StoreChangeEvent<ImageAnnotation>) => {\n        const { updated } = event.changes;\n        editableAnnotations = updated?.map(change => change.newValue);\n      }   \n      \n      store.observe(storeObserver, { annotations: editableIds });\n    } else {\n      editableAnnotations = undefined;\n    }\n  }\n\n  const onSelectionCreated = <T extends Shape>(evt: CustomEvent<T>) => {\n    const id = uuidv4();\n\n    const annotation: ImageAnnotation = {\n      id,\n      bodies: [],\n      target: {\n        annotation: id,\n        selector: evt.detail,\n        creator: user,\n        created: new Date()\n      }\n    };\n\n    store.addAnnotation(annotation);\n\n    selection.setSelected(annotation.id);\n  }\n\n  const onChangeSelected = (annotation: ImageAnnotation) => (event: CustomEvent<Shape>) => {  \n    const { target } = annotation;\n\n    // We don't consider a shape edit an 'update' if it happens within 10mins\n    const GRACE_PERIOD = 10 * 60 * 1000;\n\n    const isUpdate = \n      target.creator?.id !== user.id ||\n      !target.created ||\n      new Date().getTime() - target.created.getTime() > GRACE_PERIOD;\n\n    store.updateTarget({\n      ...target,\n      selector: event.detail,\n      created: isUpdate ? target.created : new Date(),\n      updated: isUpdate ? new Date() : undefined,\n      updatedBy: isUpdate ? user : undefined\n    });\n  }\n\n  // To get around lack of TypeScript support in Svelte markup\n  const getEditor = (shape: Shape): typeof SvelteComponent => _getEditor(shape)!;\n</script>\n\n<svg\n  bind:this={svgEl}\n  class=\"a9s-annotationlayer\"\n  class:drawing={tool}\n  class:hidden={!visible}\n  on:pointerup={onPointerUp}\n  on:pointerdown={onPointerDown}>\n  \n  <g>\n    {#each $store as annotation}\n      {#if !isEditable(annotation)}\n        {@const selector = annotation.target.selector}\n        {#key annotation.id}\n          {#if (selector.type === ShapeType.ELLIPSE)}\n            <Ellipse annotation={annotation} geom={selector.geometry} style={style} />\n          {:else if (selector.type === ShapeType.RECTANGLE)}\n            <Rectangle annotation={annotation} geom={selector.geometry} style={style} />\n          {:else if (selector.type === ShapeType.POLYGON)}\n            <Polygon annotation={annotation} geom={selector.geometry} style={style} />\n          {/if}\n        {/key}\n      {/if}\n    {/each}\n  </g>\n\n  <g \n    bind:this={drawingEl}\n    class=\"drawing\" >\n    {#if drawingEl}\n      {#if editableAnnotations}\n        {#each editableAnnotations as editable}\n          {#key editable.id}\n            <EditorMount\n              target={drawingEl}\n              editor={getEditor(editable.target.selector)}\n              annotation={editable}\n              style={style}\n              transform={transform}\n              viewportScale={$scale}\n              on:change={onChangeSelected(editable)} />\n          {/key}\n        {/each}\n      {:else if (tool && drawingEnabled)} \n        {#key toolName}\n          <ToolMount \n            target={drawingEl}\n            tool={tool}\n            drawingMode={drawingMode}\n            transform={transform}\n            viewportScale={$scale}\n            on:create={onSelectionCreated} />\n        {/key}\n      {/if}\n    {/if}\n  </g>\n</svg>","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\nimport { ShapeType,computeArea, intersects } from '../model';\nimport type { ImageAnnotationTarget } from '../model';\n\ninterface IndexedTarget {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n  target: ImageAnnotationTarget;\n\n}\n\nexport const createSpatialTree = () => {\n\n  const tree = new RBush<IndexedTarget>();\n\n  const index = new Map<string, IndexedTarget>();\n\n  const all = () => [...index.values()];\n\n  const clear = () => {\n    tree.clear();\n    index.clear();\n  }\n\n  const insert = (target: ImageAnnotationTarget) => {\n    const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\n\n    const t = { minX, minY, maxX, maxY, target };\n\n    tree.insert(t);\n    index.set(target.annotation, t);\n  };\n\n  const remove = (target: ImageAnnotationTarget) => {\n    const item = index.get(target.annotation);\n    if (item)\n      tree.remove(item);\n    index.delete(target.annotation);\n  };\n\n  const update = (previous: ImageAnnotationTarget, updated: ImageAnnotationTarget) => {\n    remove(previous);\n    insert(updated);\n  };\n\n  const set = (targets: ImageAnnotationTarget[], replace: boolean = true) => {\n    if (replace) \n      clear();\n\n    const indexedTargets = targets.map(target => {\n      const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\n      return { minX, minY, maxX, maxY, target };\n    });\n\n    indexedTargets.forEach(t => index.set(t.target.annotation, t));\n    tree.load(indexedTargets);\n  };\n\n  const getAt = (x: number, y: number): ImageAnnotationTarget | undefined => {\n    const idxHits = tree.search({\n      minX: x,\n      minY: y,\n      maxX: x,\n      maxY: y\n    }).map(item => item.target);\n\n    // Exact hit test on shape (not needed for rectangles!)\n    const exactHits = idxHits.filter(target => {\n      return (target.selector.type === ShapeType.RECTANGLE) ||\n        intersects(target.selector, x, y);\n    });\n\n    // Get smallest shape\n    if (exactHits.length > 0) {\n      exactHits.sort((a, b) => computeArea(a.selector) - computeArea(b.selector));\n      return exactHits[0];\n    }\n  };\n\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\n    tree.search({\n      minX: x,\n      minY: y,\n      maxX: x + width,\n      maxY: y + height\n    }).map(item => item.target);\n  \n  const size = () => tree.all().length;\n\n  return {\n    all,\n    clear,\n    getAt,\n    getIntersecting,\n    insert,\n    remove,\n    set,\n    size,\n    update\n  }\n\n}\n","import type { ImageAnnotation, ImageAnnotationTarget } from '../model';\nimport type { AnnotoriousOpts } from '../AnnotoriousOpts';\nimport { createSpatialTree } from './spatialTree';\nimport { \n  createViewportState,\n  toSvelteStore,\n  type AnnotatorState, \n  type HoverState,\n  type SelectionState\n} from '@annotorious/core';\nimport { \n  createHoverState, \n  createSelectionState, \n  createStore\n} from '@annotorious/core';\nimport type { \n  ImageAnnotationStore,\n  SvelteImageAnnotationStore, \n  SvelteImageAnnotatorState\n} from './ImageAnnotationStore';\n\nexport type ImageAnnotatorState<T extends ImageAnnotationStore = ImageAnnotationStore> = AnnotatorState<ImageAnnotation> & {\n\n  store: T;\n\n  selection: SelectionState<ImageAnnotation>;\n\n  hover: HoverState<ImageAnnotation>;\n\n}\n\nexport const createImageAnnotatorState = <E extends unknown>(\n  opts: AnnotoriousOpts<ImageAnnotation, E>\n): ImageAnnotatorState<ImageAnnotationStore> => {\n\n  const store = createStore<ImageAnnotation>();\n\n  const tree = createSpatialTree();\n\n  const selection = createSelectionState(store, opts.pointerSelectAction);\n\n  const hover = createHoverState(store);\n\n  const viewport = createViewportState();\n\n  store.observe(({ changes }) => {\n    tree.set((changes.created || []).map(a => a.target as ImageAnnotationTarget), false);\n    \n    (changes.deleted || []).forEach(a => tree.remove(a.target as ImageAnnotationTarget));\n    \n    (changes.updated || []).forEach(({ oldValue, newValue }) =>\n      tree.update(oldValue.target, newValue.target));\n  });\n\n  const getAt = (x: number, y: number): ImageAnnotation | undefined => {\n    const target = tree.getAt(x, y);\n    return target ? store.getAnnotation(target.annotation) : undefined; \n  }\n\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\n    tree.getIntersecting(x, y, width, height).map(target => store.getAnnotation(target.annotation));\n\n  return {\n    store: {\n      ...store,\n      getAt,\n      getIntersecting\n    } as ImageAnnotationStore,\n    selection,\n    hover,\n    viewport\n  }\n\n}\n\nexport const createSvelteImageAnnotatorState = <E extends unknown>(  \n  opts: AnnotoriousOpts<ImageAnnotation, E>\n): SvelteImageAnnotatorState => {\n\n  const state = createImageAnnotatorState(opts);\n  \n  return {\n    ...state,\n    store: toSvelteStore(state.store) as SvelteImageAnnotationStore\n  }\n\n}\n  ","import type { Theme } from '../../AnnotoriousOpts';\n\nexport const sampleBrightness = (imageOrCanvas: HTMLElement) => {\n\n  let canvas: HTMLCanvasElement;\n\n  let context: CanvasRenderingContext2D;\n\n  if (imageOrCanvas.nodeName === 'CANVAS') {\n    canvas = imageOrCanvas as HTMLCanvasElement;\n    context = canvas.getContext('2d', { willReadFrequently: true })!;\n  } else {\n    const img = imageOrCanvas as HTMLImageElement;\n    // Copy image to in-memory canvas for processing\n    canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    context = canvas.getContext('2d', { willReadFrequently: true })!;\n    context.drawImage(img, 0, 0, img.width, img.height);\n  }\n\n  let totalBrightness = 0;\n\n  // Sample a grid of points spaced 10% width/height apart (= 9 x 9 samples)\n  for (let i = 1; i < 10; i++) {\n    for (let j = 1; j < 10; j++) {\n      const x = Math.round(j * canvas.width / 10);\n      const y = Math.round(i * canvas.height / 10);\n\n      const pixelData = context.getImageData(x, y, 1, 1).data;\n      const brightness = (0.299 * pixelData[0] + 0.587 * pixelData[1] + 0.114 * pixelData[2]) / 255;\n      totalBrightness += brightness;\n    }\n  }\n\n  return totalBrightness / 81;\n}\n\nexport const detectTheme = (imageOrCanvas: HTMLElement) => {\n  const brightness = sampleBrightness(imageOrCanvas);\n  const theme = brightness > 0.6 ? 'dark' : 'light'\n\n  console.log(`[Annotorious] Image brightness: ${brightness.toFixed(1)}. Setting ${theme} theme.`);\n\n  return theme;\n}\n\nexport const setTheme = (imageOrCanvas: HTMLElement, container: HTMLElement, theme: Theme) =>\n  container.setAttribute('data-theme', theme === 'auto' ? detectTheme(imageOrCanvas) : theme);","import type { Annotation, DrawingStyle, FormatAdapter, PointerSelectAction } from '@annotorious/core';\nimport type { ImageAnnotation } from './model';\n\nexport interface AnnotoriousOpts<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> {\n\n  adapter?: FormatAdapter<I, E>;\n\n  autoSave?: boolean;\n\n  drawingEnabled?: boolean;\n\n  // 'click': starts on single click, user cannot select unless drawingEnabled = false\n  // 'drag': starts drawing on drag, single click always selects\n  drawingMode?: DrawingMode;\n\n  pointerSelectAction?: PointerSelectAction | ((a: I) => PointerSelectAction);\n\n  style?: DrawingStyle | ((annotation: I) => DrawingStyle);\n\n  theme?: Theme;\n\n}\n\nexport type DrawingMode = 'click' | 'drag';\n\nexport type Theme = 'dark' | 'light' | 'auto';\n\nexport const fillDefaults = <I extends ImageAnnotation = ImageAnnotation, E extends unknown = ImageAnnotation> (\n  opts: AnnotoriousOpts<I, E>,\n  defaults: AnnotoriousOpts<I, E>\n): AnnotoriousOpts<I, E> => {\n\n  return {\n    ...opts,\n    drawingEnabled: opts.drawingEnabled === undefined ? defaults.drawingEnabled : opts.drawingEnabled,\n    drawingMode: opts.drawingMode || defaults.drawingMode,\n    pointerSelectAction: opts.pointerSelectAction || defaults.pointerSelectAction,\n    theme: opts.theme || defaults.theme\n  };\n\n};\n\n\n\n\n","import type { Annotation, UndoStack } from '@annotorious/core';\n\nconst isMac = navigator.userAgent.indexOf('Mac OS X') !== -1;\n\nexport const initKeyboardCommands = <T extends Annotation>(\n  undoStack: UndoStack<T>,\n  container?: Element \n) => {\n\n  const el = container || document;\n\n  const onWinKeyDown = (evt: Event) => {\n    const event = evt as KeyboardEvent;\n    \n    if (event.key === 'z' && event.ctrlKey) {\n      undoStack.undo();\n    } else if (event.key === 'y' && event.ctrlKey) {\n      undoStack.redo()\n    }\n  };\n\n  const onMacKeyDown = (evt: Event) => {\n    const event = evt as KeyboardEvent;\n\n    if (event.key === 'z' && event.metaKey) {\n      if (event.shiftKey) {\n        undoStack.redo()\n      } else {\n        undoStack.undo();\n      }\n    }\n  }\n\n  const destroy = () => {\n    if (isMac) {\n      el.removeEventListener('keydown', onMacKeyDown);\n    } else {\n      el.removeEventListener('keydown', onWinKeyDown);\n    }\n  }\n\n  if (isMac)\n    el.addEventListener('keydown', onMacKeyDown);\n  else\n    el.addEventListener('keydown', onWinKeyDown);\n\n  return { \n    destroy\n  }\n}\n","import type { SvelteComponent } from 'svelte';\nimport { PointerSelectAction } from '@annotorious/core';\nimport type { Annotator, DrawingStyleExpression, Filter, User } from '@annotorious/core';\nimport { createAnonymousGuest, createBaseAnnotator, createLifecyleObserver, createUndoStack } from '@annotorious/core';\nimport { registerEditor } from './annotation/editors';\nimport { getTool, registerTool, listDrawingTools, type DrawingTool } from './annotation/tools';\nimport { SVGAnnotationLayer } from './annotation';\nimport type { DrawingToolOpts, SVGAnnotationLayerPointerEvent } from './annotation';\nimport type { ImageAnnotation, ShapeType } from './model';\nimport { createSvelteImageAnnotatorState } from './state';\nimport { setTheme as _setTheme } from './themes';\nimport { fillDefaults, type Theme } from './AnnotoriousOpts';\nimport type { AnnotoriousOpts } from './AnnotoriousOpts';\nimport { initKeyboardCommands } from './keyboardCommands';\n\nimport './Annotorious.css';\nimport './themes/dark/index.css';\nimport './themes/light/index.css';\n\nexport interface ImageAnnotator<E extends unknown = ImageAnnotation> extends Annotator<ImageAnnotation, E> { \n\n  listDrawingTools(): string[];\n\n  registerDrawingTool(name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts): void;\n\n  registerShapeEditor(shapeType: ShapeType, editor: typeof SvelteComponent): void;\n\n  setDrawingTool(name: DrawingTool): void; \n\n  setDrawingEnabled(enabled: boolean): void;\n\n  setTheme(theme: Theme): void;\n\n}\n\nexport const createImageAnnotator = <E extends unknown = ImageAnnotation>(\n  image: string | HTMLImageElement | HTMLCanvasElement, \n  options: AnnotoriousOpts<ImageAnnotation, E> = {}\n): ImageAnnotator<E> => {\n\n  if (!image)\n    throw 'Missing argument: image';\n\n  const img = (typeof image === 'string' ? \n    document.getElementById(image) : image) as HTMLImageElement | HTMLCanvasElement;\n\n  const opts = fillDefaults<ImageAnnotation, E>(options, {\n    drawingEnabled: true,\n    drawingMode: 'drag',\n    pointerSelectAction: PointerSelectAction.EDIT,\n    theme: 'light'\n  });\n\n  const state = createSvelteImageAnnotatorState(opts);\n\n  const { selection, store } = state;\n\n  const undoStack = createUndoStack(store);\n\n  const lifecycle = createLifecyleObserver<ImageAnnotation, E>(\n    state, undoStack, opts.adapter, opts.autoSave\n  );\n\n  // We'll wrap the image in a container DIV.\n  const container = document.createElement('DIV');\n  container.style.position = 'relative';\n  container.style.display = 'inline-block';\n\n  // Wrapper div has unwanted margin at the bottom otherwise!\n  img.style.display = 'block';\n\n  img.parentNode!.insertBefore(container, img);\n  container.appendChild(img);\n\n  const keyboardCommands = initKeyboardCommands(undoStack);\n\n  let currentUser: User = createAnonymousGuest();\n\n  _setTheme(img, container, opts.theme!);\n\n  const annotationLayer = new SVGAnnotationLayer({\n    target: container,\n    props: { \n      drawingEnabled: Boolean(opts.drawingEnabled), \n      image: img, \n      preferredDrawingMode: opts.drawingMode!,\n      state, \n      style: opts.style, \n      user: currentUser\n    }\n  });\n\n  annotationLayer.$on('click', (evt: CustomEvent<SVGAnnotationLayerPointerEvent>) => {\n    const { originalEvent, annotation } = evt.detail;\n    if (annotation)\n      selection.clickSelect(annotation.id, originalEvent);\n    else if (!selection.isEmpty())\n      selection.clear();\n  });\n\n  /*************************/\n  /*      External API     */\n  /******++++++*************/\n\n  // Most of the external API functions are covered in the base annotator\n  const base = createBaseAnnotator<ImageAnnotation, E>(state, undoStack, opts.adapter);\n\n  const destroy = () => {\n    // Destroy Svelte annotation layer\n    annotationLayer.$destroy();\n\n    // Unwrap the image\n    container.parentNode!.insertBefore(img, container);\n    container.parentNode!.removeChild(container);\n\n    // Other cleanup actions\n    keyboardCommands.destroy();\n    undoStack.destroy();\n  }\n\n  const getUser = () => currentUser;\n\n  const registerDrawingTool = (name: string, tool: typeof SvelteComponent, opts?: DrawingToolOpts) =>\n    registerTool(name, tool, opts);\n\n  const registerShapeEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n    registerEditor(shapeType, editor);\n\n  const setDrawingTool = (name: DrawingTool) => {\n    // Validate that the tool exists\n    const toolSpec = getTool(name);\n    if (!toolSpec)\n      throw `No drawing tool named ${name}`;\n\n    // @ts-ignore\n    annotationLayer.$set({ toolName: name })\n  }\n\n  const setDrawingEnabled = (enabled: boolean) =>\n    annotationLayer.$set({ drawingEnabled: enabled });\n  \n  const setFilter = (filter: Filter) => {\n    console.warn('Filter not implemented yet');\n  }\n\n  const setStyle = (style: DrawingStyleExpression<ImageAnnotation> | undefined) =>\n    annotationLayer.$set({ style });\n\n  const setTheme = (theme: Theme) => _setTheme(img, container, theme);\n  \n  const setUser = (user: User) => {\n    currentUser = user;\n    annotationLayer.$set({ user });\n  }\n\n  const setVisible = (visible: boolean) =>\n    // @ts-ignore\n    annotationLayer.$set({ visible });\n\n  return {\n    ...base,\n    destroy,\n    getUser,\n    listDrawingTools,\n    on: lifecycle.on,\n    off: lifecycle.off,\n    registerDrawingTool,\n    registerShapeEditor,\n    setDrawingEnabled,\n    setDrawingTool,\n    setFilter,\n    setStyle,\n    setTheme,\n    setUser,\n    setVisible,\n    state\n  }\n\n}"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","exclude_internal_props","props","result","null_to_empty","value","globals","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","e","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","ensure_array_like","array_like_or_iterator","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","index","PUBLIC_VERSION","ShapeType","Utils","registerShapeUtil","util","computeArea","shape","intersects","x","y","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","j","inside","xi","yi","xj","yj","RectangleUtil","rect","parseFragmentSelector","fragmentOrSelector","invertY","regex","matches","_","prefix","unit","d","w","h","serializeFragmentSelector","geometry","SVG_NAMESPACE","sanitize","doc","cleanEl","el","scripts","insertSVGNamespace","originalDoc","namespaced","parseSVGXML","isPrefixDeclared","isDefaultNamespaceSVG","parseSVGPolygon","str","p","parseSVGEllipse","bounds","parseSVGSelector","valueOrSelector","serializeSVGSelector","geom","xy","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","randomUUID","native","v4","buf","rnds","B","n","t","z","q","Y","E","u","L","Ce","G","V","we","s","H","S","U","D","K","ee","te","ne","P","O","se","o","ie","de","Se","r","f","C","T","I","v","l","g","A","m","R","N","Oe","W","ae","Te","De","Re","re","xe","ce","le","ue","fe","pe","Ie","he","ge","ke","Ne","W3CImageFormat","source","serialized","parseW3CImageAnnotation","annotation","serializeW3CImageAnnotation","annotationId","uuidv4","creator","created","modified","body","bodies","parseW3CBodies","w3cTarget","w3cSelector","selector","parseW3CUser","updated","updatedBy","w3CSelector","serializeW3CBodies","handle_changes","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","current","each_blocks","grab","$$props","computedStyle","transform","viewportScale","editor","handle","delta","idx","$$invalidate","distance","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","setSize","image","svg","naturalWidth","naturalHeight","width","height","img","enableResponsive","resizeObserver","svgBounds","scale","isTouch","rect_class_value","circle","circle_r_value","create_if_block","radius","touched","onPointerDown","onPointerUp","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","handle0_changes","handle1_changes","handle2_changes","handle3_changes","rectangle","initialBounds","x0","y0","x1","y1","REGISTERED","RectangleEditor","PolygonEditor","getEditor","registerEditor","shapeType","dispatch","grabbedHandle","origin","initialShape","onGrab","evt","onPointerMove","onRelease","computeStyle","style","computed","fill","fillOpacity","css","editorComponent","drawingMode","tool","toolComponent","cleanup","addEventListener","capture","lastPointerDown","timeDifference","stopDrawing","child_ctx","create_if_block_1","rect_x_value","rect_y_value","get_if_ctx","CLOSE_DISTANCE","TOUCH_PAUSE_LIMIT","cursor","touchPauseTimer","isClosable","timeStamp","offsetX","offsetY","point","onDblClick","RubberbandRectangle","RubberbandPolygon","listDrawingTools","getTool","registerTool","opts","g_data_id_value","ellipse0","ellipse1","IdentityTransform","createSVGTransform","bbox","pt","MAX_CLICK_DURATION","addEventListeners","getSVGPoint","left","top","previous_key","polygon_changes","rectangle_changes","ellipse_changes","show_if","editormount_changes","g0","g1","drawingEnabled","preferredDrawingMode","state","toolName","user","visible","drawingEl","svgEl","selection","storeObserver","editableAnnotations","trackSelection","selected","editableIds","editable","id","change","onSelectionCreated","onChangeSelected","_a","GRACE_PERIOD","isUpdate","_getEditor","$$value","isEditable","$selection","quickselect","right","compare","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","tmp","RBush","maxEntries","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","createSpatialTree","tree","all","clear","remove","exactHits","replace","indexedTargets","previous","createImageAnnotatorState","createStore","createSelectionState","hover","createHoverState","viewport","createViewportState","changes","oldValue","newValue","createSvelteImageAnnotatorState","toSvelteStore","sampleBrightness","imageOrCanvas","canvas","context","totalBrightness","pixelData","brightness","detectTheme","theme","setTheme","container","fillDefaults","defaults","isMac","initKeyboardCommands","undoStack","onWinKeyDown","onMacKeyDown","destroy","createImageAnnotator","PointerSelectAction","createUndoStack","lifecycle","createLifecyleObserver","keyboardCommands","currentUser","createAnonymousGuest","_setTheme","annotationLayer","SVGAnnotationLayer","originalEvent","base","createBaseAnnotator","getUser","registerDrawingTool","registerShapeEditor","setDrawingTool","setDrawingEnabled","enabled","setFilter","filter","setStyle","setUser","setVisible"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,18,19,20,21,26,45,46]}